-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Hôte : 127.0.0.1:3306
-- Généré le : dim. 12 mars 2023 à 06:42
-- Version du serveur : 8.0.31
-- Version de PHP : 8.0.26

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de données : `ovnie`
--

-- --------------------------------------------------------

--
-- Structure de la table `actu`
--

DROP TABLE IF EXISTS `actu`;
CREATE TABLE IF NOT EXISTS `actu` (
  `id` int NOT NULL AUTO_INCREMENT,
  `titre` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `date_actu` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `actu`
--

INSERT INTO `actu` (`id`, `titre`, `message`, `date_actu`) VALUES
(1, 'Refonte du site', 'Le site a été totalement remanié. Certains liens restent inaccessibles :\r\n\r\n\"Forum\" et \"Accès aux VIP\"\r\n\r\nNous nous excusons pour la gêne occasionnée.', '2023-03-06 02:00:27');

-- --------------------------------------------------------

--
-- Structure de la table `articles`
--

DROP TABLE IF EXISTS `articles`;
CREATE TABLE IF NOT EXISTS `articles` (
  `id` int NOT NULL AUTO_INCREMENT,
  `titre` varchar(255) NOT NULL,
  `corps` longtext NOT NULL,
  `liaison` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `articles`
--

INSERT INTO `articles` (`id`, `titre`, `corps`, `liaison`) VALUES
(1, 'Dining Room', '<h1><strong>Dining Room</strong></h1>\r\n				<p class=\"textJustify\">Dining Room est une courte vidéo effrayante publiée le 3 avril 2006 sur YouTube par son propriétaire David Earle et compte à l\'heure actuelle plus de 5 millions de vues. Elle met en scène une femme à l\'allure cadavérique qui assise dans une salle à manger aux décors mortifères prononce trois mots incompréhensibles avant de s\'effondrer la tête la première dans son bol de soupe. La vidéo revient ensuite en arrière permettant de révéler la nature des mots : \"There is nothing\" soit en français \"Il n\'y a rien\".</p>\r\n				<p class=\"textCenter\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ns1SGo3WCF4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\r\n				<p class=\"textJustify\">Son créateur David Earle a déclaré que son objectif été de créer une vidéo qui puisse boucler à l\'infini afin qu\'il ne puisse exister ni début ni fin dans l\'optique de montrer qu\'il n\'y a rien de l\'autre côté de la vie :</p>\r\n				<blockquote><p class=\"textJustify\">En boucle, il n\'y a ni début ni fin réels, ni sens réel de l\'endroit où se trouvent réellement le début et la fin. Cette pièce a été inspirée par un désir paradoxal personnel de preuve empirique qu\'il n\'y a rien de l\'autre côté de la vie. J\'ai voulu brouiller la distinction entre les deux états, et énoncer le paradoxe en montrant quelqu\'un qui revient de la vie (ou de la mort), et nie son existence, accomplissant ainsi le paradoxe.</p></blockquote>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 1),
(2, 'I Feel Fantastic', '<h1><strong>I Feel Fantastic</strong></h1>\r\n				<p class=\"textJustify\">I Feel Fantastic est une courte vidéo effrayante publiée le 15 avril 2009 sur YouTube par l\'utilisateur Creepyblog et compte à l\'heure actuelle plus de 19 millions de vues. La vidéo met en scène une androîde chantant une chanson dans une mystérieuse maison.</p>\r\n				<p class=\"textCenter\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/diY6Mt_uqYs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\r\n				<p class=\"textJustify\">En réalité la vidéo a été diffusée pour la première fois sur Internet en 2004 avec plusieurs autres vidéos et chansons de la même androîde. Ce gynoîde nommée Tara a été créé par un homme nommé John Bergeron qui l\'a programmée pour chanter des chansons que lui-même a écrites. Il proposé ensuite ces vidéos, moyennant des frais, sur son site web qui est devenu inaccessibles en 2006. Ce n\'est qu\'après la rediffusion par Creepyblog en 2009 que la vidéo est devenue virale. Cela s\'explique en premier lieu par l\'atmosphère oppressante qu\'elle dégage. Tara a beau ressemblait à un être humain elle n\'en reste pas moins un robot difforme : taille très grande, visage et mains émaciés, teint pâle, aucune émotion avec une voix monotone et synthétique. De plus la maison relativement petite et isolée ne fait que renforcer ce sentiment. En deuxième lieu on peut clairement entendre dans les paroles de la chanson \"Please leave !\" ainsi que \"Run, run, run, run,\" qu\'on peut traduire respectivement par \"S\'il vous plaît, partez !\" et \"Courez, courez ...\". Des paroles en soient plutôt inquiétantes. Enfin en troisième lieu la description de la video est une référence au mythe de Pygmalion qui renvoie à une légende racontant l\'histoire du sculpteur Pygmalion qui ne trouvant aucune femme qui lui convienne en créée une à sa façon, Galatée, une statue rendue vivante grâce à Aphrodite, la déesse de l\'amour. Bien que cette description n\'est aucun lien avec John Bergeron, la confusion demeure pour les utilisateurs visionnant la vidéo.</p>\r\n\r\n				<p class=\"textJustify\">Le mystère engendré par ces images et le peu d\'information concernant l\'auteur John Bergeron ont amenés à de nombreuses théories dont la plus connue est la suivante :</p>\r\n				<blockquote><p class=\"textJustify\">Tara porterait les vêtements de la victime d’un tueur. Les paroles de la chanson assez explicites et le zoom fait dans l\'arrière-cour qui pourrait suggérer la zone de l\'enterrement du cadavre semblerait aller dans cette optique.</p></blockquote>\r\n				<p class=\"textJustify\">Cette théorie serait-elle vraie ? Il est impossible de donner une crédibilité à ces rumeurs mais l\'absence de réponse de la part de monsieur John Bergeron et surtout sa disparition sur les réseaux sociaux après qu\'une deuxième personne l\'ai contacté pour des explications ne fait qu\'accroître les suspicions.</p>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 1),
(3, 'Fatal Diving Accident', '<h1><strong>Fatal Diving Accident</strong></h1>\r\n				<p class=\"textJustify\">Fatal Diving Accident est une vidéo filmée par Yuri Lipski, instructeur de plongée russo-israélien âgé de 22 ans. Les images le montrent en pleine plongée dans le «Blue Hole» de Dahab, en Égypte, le 28 avril 2000. Cet endroit est notamment connu pour avoir tué de nombreux plongeurs inexpérimentés. Ce sera le cas de Lipkski qui au cours de l\'enregistrement se trouve pris dans une descente involontaire et incontrôlée, atterrissant finalement au fond de la mer à 115 mètres où il panique, retire son détendeur et tente de remplir son gilet stabilisateur sans pouvoir remonter.</p>\r\n				<p class=\"textCenter\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cRj0lymMMGs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\r\n				<p class=\"textJustify\">À une telle profondeur se produit ce qu\'on nomme une narcose à l\'azote, aussi appelée ivresse des profondeurs, qui est un excès d\'azote agissant sur le système nerveux en entraînant des troubles du comportement (hallucinations, panique, confusion ...). Pour pallier ce problème les plongeurs emportent plusieurs bouteilles de trimix qui sont un mélange gazeux constitué de trois gaz : le dioxygène (O2), l\'hélium (He) et le diazote (N2). Lipski avait un seul réservoir supposé être de l\'air ce qui l\'aurait soumis à ce phénomène de narcose à l\'azote. Son corps n\'est retrouvé que le lendemain, à la demande de sa mère, par l\'un des plus grands plongeurs du monde en eau pronfonde Tarek Omar. Omar avait par ailleurs tenté de dissuader le jeune plongeur à deux reprises de toute tentative de plongée. En bas, Omar a trouvé le casque avec la caméra de Lipski, toujours intacte. La vidéo qu’elle contient est disponible sur YouTube sous le titre \"Fatal Diving Accident Caught On Tape\".</p>\r\n				<p class=\"textJustify\">Extrait des dires d\'Omar :</p>\r\n				<blockquote><p class=\"textJustify\">Deux jours après que nous ayons retrouvé ses restes et donné à [sa mère] ses affaires et son matériel, elle est venue me demander de l\'aider à les démonter afin qu\'elle puisse les emballer. La caméra aurait dû être endommagée ou même complètement cassée car je l\'avais trouvée à une profondeur de 115 mètres et elle été conçue pour ne supporter que 75 mètres; mais, à ma grande surprise, la caméra fonctionnait toujours. Nous avons joué le film et sa mère était là. Je regrette que sa mère l\'ait vu ... Si j\'avais su que le film existait, je l\'aurais détruit. Je pense que ce qui m\'a vraiment bouleversé et attristé, c\'est que sa mère l\'ait maintenant - elle a les images de son fils qui se noie.</p></blockquote>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 1),
(4, '2AM : The Smiling Man', '<h1><strong>2AM : The Smiling Man</strong></h1>\r\n				<p class=\"textJustify\">2AM : The Smiling Man est un court-métrage réalisé par Michael Evans. Dans celui-ci on y voit un jeune homme se balader tranquillement dans une rue aux environs de 2 heures du matin lorsqu’il croise un homme plutôt drôle et souriant aux premiers abords mais qui finit par devenir son pire cauchemar par la suite ...</p>\r\n				<p class=\"textCenter\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_u6Tt3PqIfQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\r\n				<p class=\"textJustify\">Pour ce court-métrage Michael Evans s’est inspiré de faits réels. C’est en 2012 qu’un internaute (blue_tidal) suite à une très mauvaise aventure décide de la partager sur le réseau communautaire Reddit. En voici pour vous la traduction :</p>\r\n				<blockquote><p class=\"textJustify\">Il y a cinq ans, je vivais au coeur d’une grande ville aux Etats-Unis. J’ai toujours été une personne aimant bouger la nuit, à la différence de mon colocataire qui, une fois couché, m’obligeait à tuer l’ennui. Pour passer le temps, j’avais pris l’habitude de faire de longues promenades, perdu dans mes pensées. J’ai fait ça pendant quatre ans, marcher seul la nuit, et je n’ai jamais eu une seule raison d’avoir peur. Pour rire, je disais à mon colocataire que même les trafiquants de drogue étaient aimables. Mais un soir, tout ça a changé en quelques minutes.</p>\r\n				<p class=\"textJustify\">C\'était un mercredi, il devait être environ deux heures du matin, et je marchais près d’un parc de patrouille de police assez loin de mon appartement. C’était une nuit calme, même pour un soir de semaine, avec très peu de passage et de personnes à pied. Le parc, comme la plupart du temps à cette heure-ci, était complètement vide. C’est quand j’ai tourné dans une rue latérale afin de prendre la direction de mon appartement que je l’ai remarqué. Au bout de la rue, de mon côté, la silhouette d’un homme en train de danser. C’était une danse étrange, semblable à une valse, une sorte de marche dansante dont j’étais la trajectoire. Décidant qu’il était probablement ivre, je me suis déporté vers la route afin de lui laisser suffisamment de place pour me dépasser. Plus il avançait, plus je réalisais à quel point il se déplaçait d’une manière fort gracieuse. Il était très grand et maigre, et portait un vieux costume. Il dansait de plus en plus près, jusqu’à ce que je puisse distinguer son visage. Ses yeux était grand ouverts, un regard de fou, la tête légèrement inclinée vers l’arrière, en direction du ciel. Sa bouche laissait apparaitre un large sourire cartoonesque. Devant cela, j’ai alors décidé de traverser la route avant qu’il ne soit trop près de moi. J’ai détourné mon regard pour traverser la rue déserte et une fois de l’autre côté, je me suis retourné… et mon sang n’a fait qu’un tour. Il avait cessé de danser et se tenait droit debout avec un pied sur la route, parfaitement parallèle à moi. Il était en face de moi mais continuait à regarder le ciel, toujours avec son large sourire sur les lèvres.</p>\r\n				<p class=\"textJustify\">Complètement déconcerté, j’ai repris ma marche sans quitter l’homme des yeux. Il ne bougeait pas. Une fois que j’ai pu mettre un peu de distance entre nous, je me suis détourné de lui quelques instants pour regarder le trottoir en face de moi. C’était complètement désert. J’ai alors tourné la tête vers l’endroit où l’homme se tenait mais il n’était plus là. Pendant un bref instant, je me suis senti soulagé, jusqu’à ce que je le remarque. Il avait traversé la rue et était maintenant légèrement accroupi. Je ne pourrai le dire avec certitude à cause de la distance et de l’ombre, mais je suis certain qu’il me faisait face. Je ne m’étais détourné qu’environ 10 secondes, il était donc clair qu’il s’était déplacé rapidement. J’étais tellement sous le choc que je suis resté là un moment, à le regarder. Et puis il a commencé à se déplacer vers moi à nouveau. A pas de géants, sur la pointe des pieds, de façon exagérée, comme un personnage de dessin animé. Il se déplaçait très très rapidement. J’aurai aimé dire qu’à ce moment là je me suis enfui, ou sorti mon vaporisateur, ou encore mon téléphone portable, mais je n’ai rien fait de tout ça. Je suis resté là, complètement figé, alors que l’homme au sourire de fou s’avançait vers moi.</p>\r\n				<p class=\"textJustify\">Puis, il s’est de nouveau arrêté, à quelques mètres devant moi. Toujours avec son sourire, toujours le regard rivé vers le ciel. Quand j’ai finalement retrouvé ma voix, j’ai lâché la première chose qui me vienne à l’esprit. Ce que je voulais dire était « putain, qu’est-ce que vous voulez? » mais ce qui est sorti ressemblait davantage à un gémissement. Indépendamment du fait de savoir si les humains peuvent sentir la peur, il est évident qu’ils peuvent l’entendre. Je l’ai entendu dans ma propre voix, et ce simple constat m’a fait encore plus peur. Mais l’homme n’a pas du tout réagi. Il se tenait juste au même endroit, en souriant. Et puis, après ce qui semblait être une éternité, il s’est retourné, très lentement, et a recommencé sa marche dansante. Ne voulant pas lui retourner le dos à nouveau, je l’ai regardé partir, jusqu’à ce qu’il soit assez loin pour être presque hors de vue. Et j’ai alors réalisé quelque chose. Il n’allait pas plus loin, il ne dansait plus. Je constatais avec horreur que sa silhouette éloignée devenait de plus en plus grande. Il revenait vers moi. Et cette fois en courant. Je me suis mis à courir aussi. J’ai couru jusqu’à sortir de la route latérale et en rejoindre une autre plus éclairée. Il n’y avait personne quand je me suis retourné. Sur le chemin du retour vers la maison, je n’ai cessé de regarder par dessus mon épaule, m’attendant à voir ce large et absurde sourire, mais rien. J’ai vécu dans cette ville durant six mois après cette nuit, et je n’ai pas retenté d’autres promenades. Il y avait ce quelque chose sur son visage qui m’a toujours hanté. Il n’avait pas l’air ivre, ni drogué. Il avait juste l’air complètement fou. Et c’était vraiment quelque chose de très très effrayant à voir.</blockquote></p>\r\n				<p class=\"textJustify\"><u>Source</u> : <a href=\"https://www.films-horreur.com/2016/01/court-metrage-the-smiling-man-dapres-une-histoire-vraie/\">Films-horreur</a></p>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 1),
(5, 'Don\'t Hug Me I\'m Scared', '<h1><strong>Don\'t Hug Me I\'m Scared</strong></h1>\r\n				<p class=\"textJustify\">Don\'t Hug Me I\'m Scared, en français ne me fais pas de câlins j’ai peur, est une vidéo effrayante publiée le 29 juillet 2011 sur YouTube par l\'équipe This Is It Collective et compte à l\'heure actuelle plus de 59 millions de vues. Elle met en scène un carnet de notes qui inculque à des marionnettes la créativité en leur faisant faire des activités pour enfants tout en leur empêchant de développer leur propre créativité. S\'ensuit des séquences dérangeantes comme recouvrir un coeur de paillettes et servir un gâteau fait de viscères avant de se terminer sur une situation normale où le carnet de notes recommandent aux marionnettes de ne plus jamais être créatif.</p>\r\n				<p class=\"textCenter\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9C_HReR_McQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\r\n				<p class=\"textJustify\">Derrière cette vidéo se cache une vive critiques des dessins animés et des émissions pour enfants. En voici une analyse ci-dessous :</p>\r\n				<blockquote><p class=\"textJustify\">1) Le carnet de notes dit aux autres de regarder par la fenêtre et de voir la \"créativité\" mais à ce moment-là aucun des personnages autre que le carnet de notes ne peut la voir. C\'est lorsque le carnet de notes met un monocle sur un de ses yeux que les autres personnages finissent par la voir.</p>\r\n				<p class=\"textJustify\">2) L\'une des marionnettes réalise quelque chose de vraiment sympa, original et créatif (portrait d\'un clown) mais le carnet de notes décide d\'y couler dessus de l\'encre noire pour l\'effacer.</p>\r\n				<p class=\"textJustify\">3) Le carnet de notes montre une palette de couleurs pouvant être utilisée (jaune, bleu, rouge, marron et beige) mais lorsque l\'une des marionnettes veut utiliser la couleur verte le carnet de notes lui répond immédiatement : \"Non, vert n\'est pas une couleur créative.\"</p>\r\n				<p class=\"textJustify\">4) Quand les choses commencent à se faire réellement effrayantes, on aperçoit au derrière des caméras nous faisons comprendre immédiatement que tout cela est fabriqué par Hollywood (l\'endoctrinement des médias).</p>\r\n				<p class=\"textJustify\">5) Vers la fin les marionnettes commencent à manger le cerveau et le coeur expliquant ainsi par métaphore que la créativité et les émotions des enfants sont englouties par les médias. Derrière cette atmosphère innocente et enfantine dont les médias créent (nous faisant ainsi croire qu\'ils encouragent les enfants à être créatifs) se cache un sinistre complot. Telle est la nature des dessins animés pour enfants, l\'obscurité sous la lumière.</p>\r\n				<p class=\"textJustify\"><u>Conclusion</u> : c\'est la métaphore parfaite de la façon dont nos enfants sont conditionnés par des dessins animés et des émissions pour enfants à penser d\'une certaine manière, voir les choses d\'une certaine façon, et même notre éducation est endoctrinée d\'une certaine manière. Ces dessins animés enseignent à nos enfants à être ... des marionnettes.</p></blockquote>\r\n				<p class=\"textJustify\"><u>Source</u> : <a href=\"http://answers.yahoo.com/question/index?qid=20120128215322AAQpA9r\">ici</a></p>\r\n				<p class=\"textJustify\"><u>NB</u> :</p>\r\n				<ul><li>Après la popularité de « Don\'t Hug Me I\'m Scared » réalisé par Becky Sloan et Joseph Pelling, le programme Random Acts de Channel 4 a commandé le deuxième épisode. Puis en mai 2013, les deux réalisateurs ont lancés une campagne de récolte de fonds sur Kickstarter pour filmer quatre nouveaux épisodes. Vous pouvez donc voir sur leur chaine les 5 autres épisodes : <a href=\"https://www.youtube.com/user/thisisitcollective\">là</a></li>\r\n				<li>Vidéos en version française : <a href=\"https://www.youtube.com/playlist?list=PLylNOdn9oAgFSzH-NyCIL7uHTQdSUy2FZ\">en français</a></li></ul>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 1),
(6, 'Le parking', '<h1><strong>Le parking</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<h2>Méthode 1</h2>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Le parking :\r\n\r\n#Importation des modules :\r\nimport time\r\n\r\n#Création de la classe Client :\r\nclass Client:\r\n    def __init__(self, immatriculation, heure_Arr, heure_Dep):\r\n        self.immatriculation=immatriculation\r\n        self.heure_Arr=heure_Arr\r\n        self.heure_Dep=heure_Dep\r\n\r\n#Initialisation des variables :\r\nmdpAdmin=\"abc\"\r\nmdpUtilisateur=0\r\noption=0\r\ntab_Client=[]\r\n\r\n#Tant qu\'un administrateur ne ferme pas le parking :\r\nwhile mdpUtilisateur!=mdpAdmin:\r\n    #Définition du menu :\r\n    option=int(input(\"1 : Enregistrement du client | 2 - Suivi du tableau des immatriculations | 3 - Paiement | 4 - Fermeture du parking \\n Entrez l\'option : \"))\r\n    if option==1:\r\n        #Récupération de l\'immatriculation :\r\n        immatriculation=input(\"Récupération de la plaque d\'immatriculation : \")\r\n        #Vérification que l\'immatriculation n\'est pas en double :\r\n        doublette=0\r\n        for n in range(0,len(tab_Client),1):\r\n            if tab_Client[n].immatriculation==immatriculation and tab_Client[n].heure_Dep==0:\r\n                doublette=1\r\n        if doublette==1:\r\n            #L\'immatriculation existe déjà et la voiture est sur le parking :\r\n            print(\"Vous ne pouvez pas entrer car votre voiture est déjà sur le parking\")\r\n            print(\"En cas d\'ursupation de plaque d\'immatriculation veuillez contacter la police en appellant le 16\")\r\n        elif doublette==0:\r\n            #Enregistrement du client :\r\n            heure_Arr=time.time()\r\n            heure_Dep=0\r\n            client=Client(immatriculation,heure_Arr,heure_Dep)\r\n            tab_Client.append(client) #équivalent tab_Client+=[client] ou tab_Client=tab_Client+[client]\r\n            print(\"Votre immatriculation a été enregistrée\")\r\n    elif option==2:\r\n        #Suivi du tableau des immatriculations :\r\n        for k in range(0,len(tab_Client),1):\r\n            if tab_Client[k].heure_Dep==0:\r\n                print(\"Heure d\'arrivée :\",time.ctime(tab_Client[k].heure_Arr),\"| Immatriculation :\",tab_Client[k].immatriculation,\"| Heure de départ : actuellement sur le parking\")\r\n            else:\r\n                print(\"Heure d\'arrivée :\",time.ctime(tab_Client[k].heure_Arr),\"| Immatriculation :\",tab_Client[k].immatriculation,\"| Heure de départ :\",time.ctime(tab_Client[k].heure_Dep))\r\n    elif option==3:\r\n        #Calcul de la durée de stationnement en heure :\r\n        paiement=0\r\n        facture=0\r\n        immatriculation=input(\"Récupération de la plaque d\'immatriculation : \")\r\n        heure_Dep=time.time()\r\n        for i in range(0,len(tab_Client),1):\r\n            if tab_Client[i].immatriculation==immatriculation and tab_Client[i].heure_Dep==0:\r\n                tab_Client[i].heure_Dep=heure_Dep\r\n                recup_Heure_Arr=tab_Client[i].heure_Arr\r\n        heure_diff=heure_Dep-recup_Heure_Arr\r\n        heure_diff=heure_diff/3600\r\n        #Calcul de la facture :\r\n        if heure_diff*60&lt;30:\r\n            facture=1.20\r\n        elif heure_diff*60&lt;60 and heure_diff*60&gt;=30:\r\n            facture=1.70\r\n        else:\r\n            facture=int(heure_diff)*2\r\n        #Paiement de la facture :\r\n        while paiement&lt;facture:\r\n            argent=float(input(\"Veuillez insérer \"+str(facture-paiement)+\" : \"))\r\n            paiement=paiement+argent\r\n        #Rendu monnaie éventuel :\r\n        rendu=abs(facture-paiement)\r\n        print(\"Votre rendu monnaie est de :\",rendu,\"euro(s)\")\r\n        print (\"Au revoir ...\")\r\n    elif option==4:\r\n       mdpUtilisateur=input(\"Entrez le mot de passe d\'administrateur pour fermer le parking : \")\r\nprint (\"Fermeture du parking !\")</code></pre>\r\n				<p><a href=\"./python/parking_meth1.py\">parking_meth1.py</a></p>\r\n				<h2>Méthode 2</h2>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Le parking :\r\n\r\n#Importation des modules :\r\nimport time\r\n\r\n#Création de la classe Client :\r\nclass Client:\r\n    def __init__(self, immatriculation, heure_Arr, heure_Dep):\r\n        self.immatriculation=immatriculation\r\n        self.heure_Arr=heure_Arr\r\n        self.heure_Dep=heure_Dep\r\n\r\n#Initialisation des variables :\r\nmdpAdmin=\"abc\"\r\nmdpUtilisateur=0\r\noption=0\r\ntab_Client=[]\r\n\r\n#Tant qu\'un administrateur ne ferme pas le parking :\r\nwhile mdpUtilisateur!=mdpAdmin:\r\n    #Définition du menu :\r\n    option=int(input(\"1 : Enregistrement du client | 2 - Suivi du tableau des immatriculations | 3 - Paiement | 4 - Fermeture du parking \\n Entrez l\'option : \"))\r\n    if option==1:\r\n        #Récupération de l\'immatriculation :\r\n        immatriculation=input(\"Récupération de la plaque d\'immatriculation : \")\r\n        #Vérification que l\'immatriculation n\'est pas en double :\r\n        doublette=0\r\n        for n in range(0,len(tab_Client),1):\r\n            if tab_Client[n][0]==immatriculation and tab_Client[n][2]==0:\r\n                doublette=1\r\n        if doublette==1:\r\n            #L\'immatriculation existe déjà et la voiture est sur le parking :\r\n            print(\"Vous ne pouvez pas entrer car votre voiture est déjà sur le parking\")\r\n            print(\"En cas d\'ursupation de plaque d\'immatriculation veuillez contacter la police en appellant le 16\")\r\n        elif doublette==0:\r\n            #Enregistrement du client :\r\n            heure_Arr=time.time()\r\n            heure_Dep=0\r\n            client=Client(immatriculation,heure_Arr,heure_Dep)\r\n            tab_Client.append([client.immatriculation,client.heure_Arr,client.heure_Dep])\r\n    elif option==2:\r\n        #Suivi du tableau des immatriculations :\r\n        for k in range(0,len(tab_Client),1):\r\n            if tab_Client[k][2]==0:\r\n                print(\"Heure d\'arrivée :\",time.ctime(tab_Client[k][1]),\"| Immatriculation :\",tab_Client[k][0],\"| Heure de départ : actuellement sur le parking\")\r\n            else:\r\n                print(\"Heure d\'arrivée :\",time.ctime(tab_Client[k][1]),\"| Immatriculation :\",tab_Client[k][0],\"| Heure de départ :\",time.ctime(tab_Client[k][2]))\r\n    elif option==3:\r\n        #Calcul de la durée de stationnement en heure :\r\n        paiement=0\r\n        facture=0\r\n        immatriculation=input(\"Récupération de la plaque d\'immatriculation : \")\r\n        heure_Dep=time.time()\r\n        for i in range(0,len(tab_Client),1):\r\n            if tab_Client[i][0]==immatriculation and tab_Client[i][2]==0:\r\n                tab_Client[i][2]=heure_Dep\r\n                recup_Heure_Arr=tab_Client[i][1]\r\n        heure_diff=heure_Dep-recup_Heure_Arr\r\n        heure_diff=heure_diff/3600\r\n        #Calcul de la facture :\r\n        if heure_diff*60&lt;30:\r\n            facture=1.20\r\n        elif heure_diff*60&lt;60 and heure_diff*60&gt;=30:\r\n            facture=1.70\r\n        else:\r\n            facture=int(heure_diff)*2\r\n        print(facture)\r\n        #Paiement de la facture :\r\n        while paiement&lt;facture:\r\n            argent=float(input(\"Veuillez insérer \"+str(facture-paiement)+\" : \"))\r\n            paiement=paiement+argent\r\n        #Rendu monnaie éventuel :\r\n        rendu=abs(facture-paiement)\r\n        print(\"Votre rendu monnaie est de :\",rendu,\"euro(s)\")\r\n        print (\"Au revoir ...\")\r\n    elif option==4:\r\n        mdpUtilisateur=input(\"Entrez le mot de passe d\'administrateur : \")\r\nprint (\"Fermeture du parking !\")</code></pre>\r\n				<p><a href=\"./python/parking_meth2.py\">parking_meth2.py</a></p>\r\n', 2),
(7, 'La factorielle', '<h1><strong>La factorielle</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Fonction qui calcule la factorielle de n (n!) :\r\n\r\nn=int(input(\"Entrez une valeur pour n : \"))\r\n\r\ndef factorielle(n):\r\n    produit=1\r\n    i=2\r\n    while (i&lt;=n):\r\n        produit=produit*i\r\n        i+=1 #i=i+1\r\n    return [produit]\r\n    \r\nprint(factorielle(n))</code></pre>\r\n				<p><a href=\"./python/factorielle.py\">factorielle.py</a></p>\r\n', 2),
(8, 'Le discrimant', '<h1><strong>Le discriminant</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Fonction qui calcule le discriminant et les solutions d\'une équation du second degré :\r\n\r\na=int(input(\"Entrez une valeur a pour l\'équation de la forme ax^2+bx+c : \"))\r\nb=int(input(\"Entrez une valeur b pour l\'équation de la forme ax^2+bx+c : \"))\r\nc=int(input(\"Entrez une valeur c pour l\'équation de la forme ax^2+bx+c : \"))\r\n\r\ndef discriminant(a,b,c):\r\n    delta=b**2-4*a*c #delta=b*b-4*a*c\r\n    print(\"Le discriminant vaut :\",delta)\r\n\r\n    if (delta&gt;0):\r\n        x=(-b-delta**(1/2))/(2*a)\r\n        m=(-b+delta**(1/2))/(2*a)\r\n        print(\"Il existe 2 racines distinctes :\",x,\"et\",m)\r\n        return [x,m]\r\n    if (delta==0):\r\n        k=(-b)/(2*a)\r\n        print(\"Il exite une unique solution réelle :\",k)\r\n        return [k]\r\n    if (delta&lt;0):\r\n        print(\"Il n\'existe aucune solution réelle.\")\r\n        return [None]\r\n        \r\nprint(discriminant(a,b,c))</code></pre>\r\n				<p><a href=\"./python/discriminant.py\">discriminant.py</a></p>\r\n', 2),
(9, 'La dichotomie', '<h1><strong>La dichotomie</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Nombre aléatoire entre 0 et 100 qui doit être retrouvé par dichotomie :\r\n\r\n#Importation du module random :\r\nimport random\r\n\r\n#Initialisation des variables :\r\nlenombre=random.randint(0,100)\r\nprint(\"Le nombre à trouver est :\",lenombre)\r\ncommencement=50\r\nborneinf=0\r\nbornesup=100\r\ncompteur=0\r\n\r\nwhile commencement!=lenombre:\r\n    if commencement&lt;lenombre:\r\n        if borneinf&lt;0:\r\n            borneinf=0\r\n        if commencement&gt;borneinf:\r\n            borneinf=commencement\r\n        commencement=commencement+int((bornesup-commencement)/2) #commencement=bornesup-int((bornesup-commencement)/2)\r\n        print(commencement)\r\n        compteur+=1 #compteur=compteur+1\r\n    if commencement&gt;lenombre:\r\n        if bornesup&gt;100:\r\n            bornesup=100\r\n        if commencement&lt;bornesup:\r\n            bornesup=commencement\r\n        commencement=commencement-int((commencement-borneinf)/2) #commencement=borneinf+int((commencement-borneinf)/2)\r\n        print(commencement)\r\n        compteur+=1 #compteur=compteur+1\r\n        \r\nprint(\"Le nombre trouvé par dichotomie est\",commencement,\"en\",compteur,\"coups\")</code></pre>\r\n				<p><a href=\"./python/dichotomie.py\">dichotomie.py</a></p>\r\n', 2),
(10, 'Année bissextile', '<h1><strong>Année bissextile</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Fonction qui retourne un booléen pour savoir si une année est bissextile :\r\n\r\nannee=int(input(\"Entrez une année : \"))\r\n\r\ndef Bissextile(annee):\r\n    if annee%400==0 or (annee%4==0 and annee%100!=0):\r\n        return(True)\r\n    else:\r\n        return(False)\r\n\r\nprint(Bissextile(annee))</code></pre>\r\n				<p><a href=\"./python/bissextile.py\">bissextile.py</a></p>\r\n', 2),
(11, 'Crible d\'Ératosthène', '<h1><strong>Crible d\'Ératosthène</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Crible d\'Ératosthène pour une valeur n donnée :\r\n\r\nn=int(input(\"Entrez une valeur pour n : \"))\r\n\r\ndef crible(n):\r\n    liste_nb_premier=[]\r\n    Liste_nb=list(range(0,n,1)) #Liste_nb=[0,1,2,3,...,n-1].\r\n    i=2 #On commence par enlever les multiples de 2.\r\n    while (i&lt;n):\r\n        j=i+i\r\n        while (j&lt;n): #Remplacement des multiples par 0.\r\n            Liste_nb[j]=0\r\n            j=j+i\r\n		#On cherche le nombre premier suivant et on remplace ses multiples par 0 :\r\n        i=i+1\r\n        while (i&lt;n and Liste_nb[i]==0):\r\n			#Si la valeur est zéro on n\'y touche pas et on passe à la suivante.\r\n            i=i+1\r\n	#On revisite Liste_nb pour enlever les éléments 0.\r\n    k=0\r\n    while (k&lt;len(Liste_nb)):\r\n        if (Liste_nb[k]!=0 and Liste_nb[k]!=1):\r\n            liste_nb_premier=liste_nb_premier+[Liste_nb[k]]\r\n        k=k+1\r\n    return(liste_nb_premier)\r\n    \r\nprint(crible(n))</code></pre>\r\n				<p><a href=\"./python/eratosthene.py\">eratosthene.py</a></p>\r\n', 2),
(12, 'Les nombres parfaits', '<h1><strong>Les nombres parfaits</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Les nombres parfaits inférieur ou égal à 2 puissance k :\r\n\r\nk=int(input(\"Entrez une valeur pour k : \"))\r\n\r\ndef est_parfait(n):\r\n    som_div=0\r\n    diviseur=1\r\n    while (diviseur&lt;n):\r\n        if ((n%diviseur)==0):\r\n           som_div+=diviseur #som_div=som_div+diviseur\r\n        diviseur+=1 #diviseur=diviseur+1\r\n    return(som_div==n)\r\n\r\ndef affiche_parfait(k):\r\n    a=1\r\n    liste_nbparfait=[]\r\n    while (a&lt;=2**k):\r\n        if (est_parfait(a)):\r\n            liste_nbparfait+=[a] #liste_nbparfait=liste_nbparfait+[a]\r\n        a+=1 #a=a+1\r\n    return(liste_nbparfait)\r\n\r\nprint(affiche_parfait(k))</code></pre>\r\n				<p><a href=\"./python/nbparfait.py\">nbparfait.py</a></p>\r\n', 2),
(13, 'Les nombres amicaux', '<h1><strong>Les nombres amicaux</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Les nombres amicaux inférieur ou égal à 2 puissance k :\r\n\r\nk=int(input(\"Entrez une valeur pour k : \"))\r\n\r\ndef som_div_propres(n):\r\n    som_div=0\r\n    diviseur=1\r\n    while (diviseur&lt;n):\r\n        if ((n%diviseur)==0):\r\n           som_div+=diviseur #som_div=som_div+diviseur\r\n        diviseur+=1 #diviseur=diviseur+1\r\n    return(som_div)\r\n\r\ndef amicaux(n,m):\r\n    return(som_div_propres(n)==m and som_div_propres(m)==n)\r\n\r\ndef affiche_amicaux(k):\r\n    listeamicaux=[]\r\n    n=1\r\n    while (n&lt;=2**k):\r\n        if(amicaux(n,som_div_propres(n))):\r\n            listeamicaux=listeamicaux+[n]+[som_div_propres(n)]\r\n        n+=1 #n=n+1\r\n    return(listeamicaux)\r\n\r\nprint(affiche_amicaux(k))</code></pre>\r\n				<p><a href=\"./python/nbamicaux.py\">nbamicaux.py</a></p>\r\n', 2),
(14, 'Les nombres presque parfaits', '<h1><strong>Les nombres presque parfaits</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Les nombres presque parfaits inférieur ou égal à 2 puissance k :\r\n\r\nk=int(input(\"Entrez une valeur pour k : \"))\r\n\r\ndef est_presque_parfait(n):\r\n    som_div=0\r\n    diviseur=1\r\n    while (diviseur&lt;n):\r\n        if ((n%diviseur)==0):\r\n           som_div+=diviseur #som_div=som_div+diviseur\r\n        diviseur+=1 #diviseur=diviseur+1\r\n    return(som_div==(n-1) or som_div==(n+1))\r\n\r\ndef affiche_est_presque_parfait(k):\r\n    a=1\r\n    liste_nbpresqueparfait=[]\r\n    while (a&lt;=2**k):\r\n        if (est_presque_parfait(a)):\r\n            liste_nbpresqueparfait+=[a] #liste_nbpresqueparfait=liste_nbpresqueparfait+[a]\r\n        a+=1 #a=a+1\r\n    return(liste_nbpresqueparfait)\r\n\r\nprint(affiche_est_presque_parfait(k))</code></pre>\r\n				<p><a href=\"./python/nbpresqueparfait.py\">nbpresqueparfait.py</a></p>\r\n', 2),
(15, 'Devinez un nombre entre 0 et 100', '<h1><strong>Devinez un nombre entre 0 et 100</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Devinez un nombre entre 0 et 100 :\r\n\r\n#Importation du module random :\r\nimport random\r\n\r\n#Initialisation des variables :\r\nnb_hasard=random.randint(0,100)\r\nnb_joueur=int(input(\"Entrez un nombre entre 0 et 100 : \"))\r\ncompteur=0\r\n\r\nwhile nb_joueur!=nb_hasard:\r\n    if nb_joueur&gt;=0 and nb_joueur&lt;=100:\r\n        if nb_joueur&lt;nb_hasard:\r\n            print(\"Choississez un nombre plus grand : \")\r\n        elif nb_joueur&gt;nb_hasard:\r\n            print(\"Choississez un nombre plus petit : \")\r\n        nb_joueur=int(input(\"Entrez un nombre entre 0 et 100 : \"))\r\n        compteur+=1 #compteur=compteur+1\r\n    else:\r\n        print(\"Veuillez choisir un nombre entre 0 et 100 !\")\r\n        nb_joueur=int(input(\"Entrez un nombre entre 0 et 100 : \"))\r\n\r\nprint(\"Félicitation vous avez trouvés le bon nombre\",nb_joueur,\"en\",compteur,\"coup\")</code></pre>\r\n				<p><a href=\"./python/jeuderecherche.py\">jeuderecherche.py</a></p>\r\n', 2),
(16, 'Le nombre de jour du mois de l\'année', '<h1><strong>Le nombre de jour du mois de l\'année</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Retourne le nombre de jours à partir de deux paramètres que sont le nom du mois et l\'entier correspondant à l\'année :\r\n\r\nliste_jour=[31,28,31,30,31,30,31,31,30,31,30,31]\r\nliste_mois=[\'janvier\',\'février\',\'mars\',\'avril\',\'mai\',\'juin\',\'juillet\',\'août\',\'septembre\',\'octobre\',\'novembre\',\'décembre\']\r\n\r\nannee=int(input(\"Entrez une année : \"))\r\nmois=input(\"Entrez un mois : \")\r\n\r\ndef Bissextile(annee):\r\n    if annee%400==0 or (annee%4==0 and annee%100!=0):\r\n        return(True)\r\n    else:\r\n        return(False)\r\n\r\ndef nombre_de_jours(mois,annee):\r\n    if (Bissextile(annee)==True and mois==liste_mois[1]):\r\n        return(29)\r\n    else:\r\n        i=0\r\n        while (i&lt;len(liste_mois)):\r\n            if (mois==liste_mois[i]):\r\n                return(liste_jour[i])\r\n            i+=1 #i=i+1\r\n            \r\nprint(nombre_de_jours(mois,annee))</code></pre>\r\n				<p><a href=\"./python/nbjourcalendrier.py\">nbjourcalendrier.py</a></p>\r\n', 2),
(17, 'Chiffrement par décalage (le code de César)', '<h1><strong>Chiffrement par décalage (le code de César)</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Chiffrer une chaine de caractère par le chiffre de César :\r\n\r\nchaine=input(\"Entrez la chaine de caractère à chiffrer : \")\r\nclef=int(input(\"Entrez la clé de chiffrement : \"))\r\n\r\ndef chiffrement(chaine,clef):\r\n    \r\n    i=0\r\n    chiffrement=\"\"\r\n    while (i&lt;len(chaine)):\r\n        if (chaine[i]==\" \"):\r\n            chiffrement=chiffrement+chaine[i]\r\n            i+=1 #i+=1\r\n        else:\r\n            decalage=ord(chaine[i])+clef\r\n            if (decalage&lt;=122):\r\n                x=chr(decalage)\r\n                chiffrement+=x #chiffrement=chiffrement+x\r\n                i+=1 #i+=1\r\n            elif (decalage&gt;122):\r\n                y=chr(decalage-26)\r\n                chiffrement+=y #chiffrement=chiffrement+y\r\n                i+=1 #i+=1\r\n    return(chiffrement)\r\n    \r\nprint(chiffrement(chaine,clef))</code></pre>\r\n				<p><a href=\"./python/chiffrementdecalage.py\">chiffrementdecalage.py</a></p>\r\n', 2),
(18, 'La somme des diviseurs propres d\'un nombre', '<h1><strong>La somme des diviseurs propres d\'un nombre</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Fait la somme des diviseurs propres d\'un nombre entré :\r\n\r\nn=int(input(\"Entrez un nombre : \"))\r\n\r\ndef somme_diviseurs_propres(n):\r\n    som_div=0\r\n    diviseur=1\r\n    while (diviseur&lt;n):\r\n        if ((n%diviseur)==0):\r\n           som_div+=diviseur #som_div=som_div+diviseur\r\n        diviseur+=1 #diviseur=diviseur+1\r\n    return(som_div)\r\n    \r\nprint(somme_diviseurs_propres(n))</code></pre>\r\n				<p><a href=\"./python/sommediviseurs.py\">sommediviseurs.py</a></p>\r\n', 2),
(19, 'Calcul le nombre d\'une lettre dans une chaine de caractère', '<h1><strong>Calcul le nombre d\'une lettre dans une chaine de caractère</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Calcul le nombre de fois qu\'apparaît une lettre dans une chaine de caractère :\r\n\r\nchaine=input(\"Entrez la chaine de caractère : \")\r\nlettre=input(\"Entrez la lettre recherchée : \")\r\n\r\ndef occurence(chaine,lettre):\r\n    \r\n    compteur=0\r\n    i=0\r\n    while (i&lt;len(chaine)):\r\n        if(chaine[i]==lettre):\r\n            compteur+=1 #compteur=compteur+1\r\n        i+=1 #i=i+1\r\n    return(compteur)\r\n    \r\nprint(occurence(chaine,lettre))</code></pre>\r\n				<p><a href=\"./python/lettre.py\">lettre.py</a></p>\r\n', 2),
(20, 'Tous les indices d\'une liste correspondant aux occurences d\'un paramètre recherché', '<h1><strong>Tous les indices d\'une liste correspondant aux occurences d\'un paramètre recherché</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Fonction qui prend deux paramètres, une liste et un élément à chercher dans la liste, et qui retourne tous les index référençant l\'élément dans la liste :\r\n\r\nchaine=input(\"Entrez une chaine de caractère : \")\r\nliste=list(chaine)\r\nelt=input(\"Entrez l\'élément à recherché : \")\r\n\r\ndef liste_index_tous(liste,elt):\r\n\r\n    i=0\r\n    liste_index=[]\r\n    while(i&lt;len(liste)):\r\n        if (liste[i]==elt):\r\n            liste_index+=[i]\r\n            #liste_index=liste_index+[i]\r\n        i+=1 #i=i+1\r\n    return(liste_index)\r\n\r\nprint(liste_index_tous(liste,elt))</code></pre>\r\n				<p><a href=\"./python/listeindextous.py\">listeindextous.py</a></p>\r\n', 2),
(21, 'Le parking', '<h1><strong>Le parking</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<h2>Méthode 1</h2>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Le parking :\r\n\r\n#Nettoyage de l\'invite commande :\r\nClear-Host\r\n\r\n#Classe :\r\nclass Client{\r\n\r\n    #Propriétés|Attributs :\r\n    [String]$immatriculation\r\n    [DateTime]$heure_Arr\r\n    [DateTime]$heure_Dep\r\n\r\n    #Constructeur :\r\n    Client ([String]$immatriculation,[DateTime]$heure_Arr,[DateTime]$heure_Dep){\r\n        $this.immatriculation=$immatriculation\r\n        $this.heure_Arr=$heure_Arr\r\n		$this.heure_Dep=$heure_Dep\r\n    }\r\n\r\n}\r\n\r\n#Initialisation des variables :\r\n[string]$mdpAdmin=\"abc\"\r\n[string]$mdpUtilisateur=\"0\"\r\n[int]$option=0\r\n$tabClient=@()\r\n\r\n#Tant qu\'un administrateur ne ferme pas le parking :\r\nwhile($mdpUtilisateur -ne $mdpAdmin ){\r\n    [string]$option=Read-Host \"1 : Enregistrement du client | 2 - Suivi du tableau des immatriculations | 3 - Paiement | 4 - Fermeture du parking `n Entrez l\'option\"\r\n    if($option -eq 1){\r\n		#Récupération de l\'immatriculation :\r\n        [string]$immatriculation=Read-Host \"Récupération de la plaque d\'immatriculation\"\r\n		#Vérification que l\'immatriculation n\'est pas en double :\r\n        $doublette=0\r\n		for($n=$tabClient.Length-1;$n -ge 0;$n--){\r\n			if($tabClient[$n].immatriculation -eq $immatriculation -and $tabClient[$n].heure_Dep -eq [DateTime]0){\r\n				$doublette=1\r\n			}\r\n		}\r\n		if($doublette -eq 1){\r\n			#L\'immatriculation existe déjà et la voiture est sur le parking :\r\n            Write-Host \"Vous ne pouvez pas entrer car votre voiture est déjà sur le parking\"\r\n            Write-Host \"En cas d\'ursupation de plaque d\'immatriculation veuillez contacter la police en appellant le 16\"\r\n		}\r\n		elseif($doublette -eq 0){\r\n			#Enregistrement du client :\r\n			[DateTime]$heure_Arr=Get-Date\r\n			[DateTime]$heure_Dep=0\r\n			$client=[Client]::new($immatriculation,$heure_Arr,$heure_Dep)\r\n			$tabClient+=$client\r\n			#$tabClient\r\n			#$tabClient.GetType()\r\n			#$tabClient[0].immatriculation.GetType()\r\n			Write-Host \"Votre immatriculation a été enregistrée\"\r\n		}\r\n    }\r\n	elseif($option -eq 2){\r\n		Foreach($historique in $tabClient){\r\n			if($historique.heure_Dep -eq [DateTime]0){\r\n				Write-Host \"Heure d\'arrivée :\" $historique.heure_Arr \"| Immatriculation :\" $historique.immatriculation \"| Heure de départ : actuellement sur le parking\"\r\n			}\r\n			else{\r\n				Write-Host \"Heure d\'arrivée :\" $historique.heure_Arr \"| Immatriculation :\" $historique.immatriculation \"| Heure de départ :\" $historique.heure_Dep\r\n			}\r\n		}\r\n	}\r\n    elseif($option -eq 3){\r\n        #Calcul de la durée de stationnement en heure :\r\n        $paiement=0\r\n        $facture=0\r\n        [string]$immatriculation=Read-Host \"Récupération de la plaque d\'immatriculation\"\r\n        $heure_Dep=Get-Date\r\n        for($i=$tabClient.Length-1;$i -ge 0;$i--){\r\n            if($tabClient[$i].immatriculation -eq $immatriculation -and $tabClient[$i].heure_Dep -eq [DateTime]0){\r\n                $recup_Heure_Arr=$tabClient[$i].heure_Arr\r\n                $tabClient[$i].heure_Dep=$heure_Dep\r\n            }\r\n        }\r\n        $heure_Diff=$heure_Dep-$recup_Heure_Arr\r\n        $heure_Diff=$heure_Diff.Seconds\r\n        $heure_Diff=$heure_Diff/3600\r\n        #Calcul de la facture :\r\n        if($heure_Diff*60 -lt 30){\r\n            $facture=1.20\r\n        }\r\n        elseif($heure_Diff*60 -lt 60 -and $heure_Diff*60 -ge 30){\r\n            $facture=1.70\r\n        }\r\n        else{\r\n            $facture=2*$heure_Diff\r\n        }\r\n        while($paiement -lt $facture){\r\n            $argent=Read-Host \"Veuillez insérer\" ($facture-$paiement) \"euro(s)\"\r\n            $paiement=$paiement+$argent\r\n        }\r\n        #Rendu monnaie éventuel :\r\n        $rendu=$facture-$paiement\r\n        $rendu=[Math]::Abs($rendu)\r\n        Write-Host \"Votre rendu monnaie est de\" $rendu \"euro(s)\"\r\n        Write-Host \"Merci, au revoir !\"\r\n    }\r\n    elseif($option -eq 4){\r\n        $mdpUtilisateur=Read-Host \"Entrez le mot de passe d\'administrateur\"\r\n    }\r\n}\r\n\r\nWrite-Host \"Le parking est fermé\"</code></pre>\r\n				<p><a href=\"./powershell/parking_meth1.ps1\">parking_meth1.ps1</a></p>\r\n				<h2>Méthode 2</h2>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Le parking :\r\n\r\n#Nettoyage de l\'invite commande :\r\nClear-Host\r\n\r\n#Classe :\r\nclass Client{\r\n\r\n    #Propriétés|Attributs :\r\n    [String]$immatriculation\r\n    [DateTime]$heure_Arr\r\n    [DateTime]$heure_Dep\r\n\r\n    #Constructeur :\r\n    Client ([String]$immatriculation,[DateTime]$heure_Arr,[DateTime]$heure_Dep){\r\n        $this.immatriculation=$immatriculation\r\n        $this.heure_Arr=$heure_Arr\r\n		$this.heure_Dep=$heure_Dep\r\n    }\r\n\r\n}\r\n\r\n#Initialisation des variables :\r\n[string]$mdpAdmin=\"abc\"\r\n[string]$mdpUtilisateur=\"0\"\r\n[int]$option=0\r\n$tabClient=@()\r\n\r\n#Tant qu\'un administrateur ne ferme pas le parking :\r\nwhile($mdpUtilisateur -ne $mdpAdmin ){\r\n    [string]$option=Read-Host \"1 : Enregistrement du client | 2 - Suivi du tableau des immatriculations | 3 - Paiement | 4 - Fermeture du parking `n Entrez l\'option\"\r\n    if($option -eq 1){\r\n		#Récupération de l\'immatriculation :\r\n        [string]$immatriculation=Read-Host \"Récupération de la plaque d\'immatriculation\"\r\n		#Vérification que l\'immatriculation n\'est pas en double :\r\n        $doublette=0\r\n		for($n=$tabClient.Length-1;$n -ge 0;$n--){\r\n			if($tabClient[$n][0] -eq $immatriculation -and $tabClient[$n][2] -eq [DateTime]0){\r\n				$doublette=1\r\n			}\r\n		}\r\n		if($doublette -eq 1){\r\n			#L\'immatriculation existe déjà et la voiture est sur le parking :\r\n            Write-Host \"Vous ne pouvez pas entrer car votre voiture est déjà sur le parking\"\r\n            Write-Host \"En cas d\'ursupation de plaque d\'immatriculation veuillez contacter la police en appellant le 16\"\r\n		}\r\n		elseif($doublette -eq 0){\r\n			#Enregistrement du client :\r\n			[DateTime]$heure_Arr=Get-Date\r\n			[DateTime]$heure_Dep=0\r\n			$client = New-Object Client -ArgumentList $immatriculation,$heure_Arr,$heure_Dep\r\n			$tabClient+=,@($client.immatriculation,$client.heure_Arr,$client.heure_Dep)\r\n			#$tabClient\r\n			#$tabClient.GetType()\r\n			#$tabClient[0][1]\r\n			Write-Host \"Votre immatriculation a été enregistrée\"\r\n		}\r\n    }\r\n	elseif($option -eq 2){\r\n		for($k=0;$k -le $tabClient.Length-1;$k++){\r\n			if($tabClient[$k][2] -eq [DateTime]0){\r\n				Write-Host \"Heure d\'arrivée :\" $tabClient[$k][1] \"| Immatriculation :\" $tabClient[$k][0] \"| Heure de départ : actuellement sur le parking\"\r\n			}\r\n			else{\r\n				Write-Host \"Heure d\'arrivée :\" $tabClient[$k][1] \"| Immatriculation :\" $tabClient[$k][0] \"| Heure de départ :\" $tabClient[$k][2]\r\n			}\r\n		}\r\n	}\r\n    elseif($option -eq 3){\r\n        #Calcul de la durée de stationnement en heure :\r\n        $paiement=0\r\n        $facture=0\r\n        [string]$immatriculation=Read-Host \"Récupération de la plaque d\'immatriculation\"\r\n        $heure_Dep=Get-Date\r\n        for($i=$tabClient.Length-1;$i -ge 0;$i--){\r\n            if($tabClient[$i][0] -eq $immatriculation -and $tabClient[$i][2] -eq [DateTime]0){\r\n                $recup_Heure_Arr=$tabClient[$i][1]\r\n                $tabClient[$i][2]=$heure_Dep\r\n            }\r\n        }\r\n        $heure_Diff=$heure_Dep-$recup_Heure_Arr\r\n        $heure_Diff=$heure_Diff.Seconds\r\n        $heure_Diff=$heure_Diff/3600\r\n        #Calcul de la facture :\r\n        if($heure_Diff*60 -lt 30){\r\n            $facture=1.20\r\n        }\r\n        elseif($heure_Diff*60 -lt 60 -and $heure_Diff*60 -ge 30){\r\n            $facture=1.70\r\n        }\r\n        else{\r\n            $facture=2*$heure_Diff\r\n        }\r\n        while($paiement -lt $facture){\r\n            $argent=Read-Host \"Veuillez insérer\" ($facture-$paiement) \"euro(s)\"\r\n            $paiement=$paiement+$argent\r\n        }\r\n        #Rendu monnaie éventuel :\r\n        $rendu=$facture-$paiement\r\n        $rendu=[Math]::Abs($rendu)\r\n        Write-Host \"Votre rendu monnaie est de\" $rendu \"euro(s)\"\r\n        Write-Host \"Merci, au revoir !\"\r\n    }\r\n    elseif($option -eq 4){\r\n        $mdpUtilisateur=Read-Host \"Entrez le mot de passe d\'administrateur\"\r\n    }\r\n}\r\n\r\nWrite-Host \"Le parking est fermé\"</code></pre>\r\n				<p><a href=\"./powershell/parking_meth2.ps1\">parking_meth2.ps1</a></p>\r\n', 3);
INSERT INTO `articles` (`id`, `titre`, `corps`, `liaison`) VALUES
(22, 'Trier un tableau comportant des années', '<h1><strong>Trier un tableau comportant des années</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Trie un tableau comportant des années :\r\n\r\n#Nettoyage de l\'invite de commande :\r\nClear-Host\r\n\r\n#Initialisation des variables :\r\n[string[]]$tableau2=@()\r\n[bool]$choix=$FALSE\r\n[string[]]$majeur=@()\r\n[string[]]$av90=@()\r\n[string[]]$an80=@()\r\n\r\n#On réalise un tableau avec des années de naissance :\r\nwhile($choix -ne $TRUE ){\r\n    [string]$annee=Read-Host \"Entrez une année\"\r\n    if($annee -eq \"stop\"){\r\n        $choix=$TRUE\r\n        break\r\n    }\r\n    $tableau2+=$annee\r\n}\r\n\r\n#On fait du traitement sur le tableau :\r\nfor($cmpt=0;$cmpt -lt $tableau2.Length;$cmpt++){\r\n    if($tableau2[$cmpt] -le 2002){\r\n        $majeur+=$tableau2[$cmpt]\r\n    }\r\n    if($tableau2[$cmpt] -le 1990){\r\n        $av90+=$tableau2[$cmpt]\r\n    }\r\n    if($tableau2[$cmpt] -lt 1990 -and $tableau2[$cmpt] -ge 1980){\r\n        $an80+=$tableau2[$cmpt]\r\n    }\r\n}\r\n\r\nWrite-Host \"Le nombre de majeur est de\" $majeur.Length\r\nWrite-Host \"Le nombre personne né avant 1990 est de\" $av90.Length\r\nWrite-Host \"Le nombre personne né dans les années 80 est de\" $an80.Length\r\n\r\n$recup=$tableau2 | Where-Object{$_ -like \"198*\"}</code></pre>\r\n				<p><a href=\"./powershell/trie_annees.ps1\">trie_annees.ps1</a></p>\r\n', 3),
(23, 'Gestion des étudiants en fonction de leur moyenne', '<h1><strong>Gestion des étudiants en fonction de leur moyenne</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<h2>Méthode basique</h2>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Gestion des étudiants en fonction de leur moyenne :\r\n\r\n#Nettoyage de l\'invite commande :\r\nClear-Host\r\n\r\n#Classe :\r\nclass Etudiant{\r\n\r\n    #Propriétés|Attributs :\r\n    [String]$prenom\r\n    [String]$nom\r\n    [String]$sexe\r\n    [Decimal]$moyenne\r\n\r\n    #Constructeur :\r\n    Etudiant ([String]$prenom,[String]$nom,[String]$sexe,[Decimal]$moyenne){\r\n        $this.prenom=$prenom\r\n        $this.nom=$nom\r\n		$this.sexe=$sexe\r\n        $this.moyenne=$moyenne\r\n    }\r\n	\r\n	#Méthode qui affiche les informations de l\'étudiant :\r\n	[Void] displayInfo(){\r\n	    Write-Host(\"Prénom de l\'étudiant : {0} | Nom de l\'étudiant : {1} | Sexe de l\'étudiant : {2} | Moyenne de l\'étudiant : {3}\" -f $this.prenom,$this.nom,$this.sexe,$this.moyenne)\r\n	}\r\n\r\n    #Méthode qui calcule la moyenne de l\'étudiant :\r\n	[Decimal] static moyenneEtudiant([Decimal]$note1,[Decimal]$note2,[Decimal]$note3){\r\n	    $moy=($note1+$note2+$note3)/3\r\n        return $moy\r\n	}\r\n\r\n    #Méthode qui permet de créer et donc d\'ajouter un étudiant :\r\n	[Etudiant] static creerEtudiant(){\r\n	    [String]$prenom_etudiant=Read-Host \"Quel est le prénom de l\'étudiant ?\"\r\n        [String]$nom_etudiant=Read-Host \"Quel est le nom de l\'étudiant ?\"\r\n        [String]$sexe_etudiant=Read-Host \"Quel est le sexe de l\'étudiant ?\"\r\n        [Decimal]$note1=Read-Host \"Quel est sa première note ?\"\r\n        [Decimal]$note2=Read-Host \"Quel est sa deuxième note ?\"\r\n        [Decimal]$note3=Read-Host \"Quel est sa troisième note ?\"\r\n        $etudiant=[Etudiant]::new($prenom_etudiant,$nom_etudiant,$sexe_etudiant,[Etudiant]::moyenneEtudiant($note1,$note2,$note3))\r\n        $etudiant.displayInfo()\r\n        return $etudiant\r\n	}\r\n\r\n}\r\n\r\n#Initialisation du tableau d\'objets :\r\n[System.Collections.ArrayList]$tabEtudiant=@() #[System.Object[]]$tabEtudiant=@()\r\n\r\n#Gestion des étudiants :\r\nDo{\r\n    [Int]$option=Read-Host \"1 : Fin du traitement | 2 - Ajouter un étudiant | 3 - Moyenne inférieur à 10 | 4 - Moyenne supérieur à 17 `n Entrez l\'option\"\r\n    switch ($option){\r\n        1{\r\n            Write-Host \"Fin du traitement\"\r\n        }\r\n        2{\r\n            $tabEtudiant+=[Etudiant]::creerEtudiant()\r\n        }\r\n        3{\r\n            Foreach($historique in $tabEtudiant){\r\n			    if($historique.moyenne -lt 10){\r\n			        $historique.displayInfo()\r\n                }\r\n            }\r\n        }\r\n        4{\r\n            Foreach($historique in $tabEtudiant){\r\n			    if($historique.moyenne -gt 17){\r\n			        $historique.displayInfo()\r\n                }\r\n            }\r\n        }\r\n        Default{\r\n            Write-Host \"Ton option n\'est pas bonne, recommence !\"\r\n        }\r\n    }\r\n}While($option -ne 1)</code></pre>\r\n				<p><a href=\"./powershell/gestion_etudiants.ps1\">gestion_etudiants.ps1</a></p>\r\n				<h2>Méthode avancée</h2>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Gestion des étudiants en fonction de leur moyenne en précisant ou en ne précisant pas leur sexe :\r\n\r\n#Nettoyage de l\'invite commande :\r\nClear-Host\r\n\r\n#Classe :\r\nclass Etudiant{\r\n\r\n    #Propriétés|Attributs :\r\n    [String]$prenom\r\n    [String]$nom\r\n    [String]$sexe\r\n    [Decimal]$moyenne\r\n\r\n    #Constructeur qui précise le sexe :\r\n    Etudiant ([String]$prenom,[String]$nom,[String]$sexe,[Decimal]$moyenne){\r\n        $this.prenom=$prenom\r\n        $this.nom=$nom\r\n		$this.sexe=$sexe\r\n        $this.moyenne=$moyenne\r\n    }\r\n\r\n    #Constructeur qui ne précise pas le sexe :\r\n    Etudiant ([String]$prenom,[String]$nom,[Decimal]$moyenne){\r\n        $this.prenom=$prenom\r\n        $this.nom=$nom\r\n        $this.moyenne=$moyenne\r\n    }\r\n	\r\n	#Méthode qui affiche les informations de l\'étudiant en précisant le sexe :\r\n	[Void] displayInfo(){\r\n	    Write-Host(\"Prénom de l\'étudiant : {0} | Nom de l\'étudiant : {1} | Sexe de l\'étudiant : {2} | Moyenne de l\'étudiant : {3}\" -f $this.prenom,$this.nom,$this.sexe,$this.moyenne)\r\n	}\r\n\r\n    #Méthode qui affiche les informations de l\'étudiant sans préciser le sexe :\r\n	[Void] displayInfoWithoutSexe(){\r\n	    Write-Host(\"Prénom de l\'étudiant : {0} | Nom de l\'étudiant : {1} | Moyenne de l\'étudiant : {2}\" -f $this.prenom,$this.nom,$this.moyenne)\r\n	}\r\n\r\n    #Méthode qui calcule la moyenne de l\'étudiant :\r\n	[Decimal] static moyenneEtudiant([Decimal]$note1,[Decimal]$note2,[Decimal]$note3){\r\n	    $moy=($note1+$note2+$note3)/3\r\n        return $moy\r\n	}\r\n\r\n    #Méthode qui permet de créer et donc d\'ajouter un étudiant en précisant le sexe :\r\n	[Etudiant] static creerEtudiant(){\r\n	    [String]$prenom_etudiant=Read-Host \"Quel est le prénom de l\'étudiant ?\"\r\n        [String]$nom_etudiant=Read-Host \"Quel est le nom de l\'étudiant ?\"\r\n        [String]$sexe_etudiant=Read-Host \"Quel est le sexe de l\'étudiant ?\"\r\n        [Decimal]$note1=Read-Host \"Quel est sa première note ?\"\r\n        [Decimal]$note2=Read-Host \"Quel est sa deuxième note ?\"\r\n        [Decimal]$note3=Read-Host \"Quel est sa troisième note ?\"\r\n        $etudiant=[Etudiant]::new($prenom_etudiant,$nom_etudiant,$sexe_etudiant,[Etudiant]::moyenneEtudiant($note1,$note2,$note3))\r\n        $etudiant.displayInfo()\r\n        return $etudiant\r\n	}\r\n\r\n    #Méthode qui permet de créer et donc d\'ajouter un étudiant sans préciser le sexe :\r\n	[Etudiant] static creerEtudiantWithoutSexe(){\r\n	    [String]$prenom_etudiant=Read-Host \"Quel est le prénom de l\'étudiant ?\"\r\n        [String]$nom_etudiant=Read-Host \"Quel est le nom de l\'étudiant ?\"\r\n        [Decimal]$note1=Read-Host \"Quel est sa première note ?\"\r\n        [Decimal]$note2=Read-Host \"Quel est sa deuxième note ?\"\r\n        [Decimal]$note3=Read-Host \"Quel est sa troisième note ?\"\r\n        $etudiant=[Etudiant]::new($prenom_etudiant,$nom_etudiant,[Etudiant]::moyenneEtudiant($note1,$note2,$note3))\r\n        $etudiant.displayInfo()\r\n        return $etudiant\r\n	}\r\n    \r\n    #Méthode qui permet de créer une liste d\'étudiant en précisant le sexe :\r\n    [System.Collections.ArrayList] static creerListeEtudiant(){\r\n        #Initialisation du tableau d\'objets :\r\n        $tabEtudiant=[System.Collections.ArrayList]::new()\r\n        [Int]$option=0\r\n\r\n        #Gestion des étudiants :\r\n        Do{\r\n            [Int]$option=Read-Host \"1 : Fin du traitement | 2 - Ajouter un étudiant | 3 - Moyenne inférieur à 10 | 4 - Moyenne supérieur à 17 `n Entrez l\'option\"\r\n            switch ($option){\r\n                1{\r\n                    Write-Host \"Fin du traitement\"\r\n                }\r\n                2{\r\n                    $tabEtudiant+=[Etudiant]::creerEtudiant()\r\n                }\r\n                3{\r\n                    Foreach($historique in $tabEtudiant){\r\n			            if($historique.moyenne -lt 10){\r\n			                $historique.displayInfo()\r\n                        }\r\n                    }\r\n                }\r\n                4{\r\n                    Foreach($historique in $tabEtudiant){\r\n			            if($historique.moyenne -gt 17){\r\n			                $historique.displayInfo()\r\n                        }\r\n                    }\r\n                }\r\n                Default{\r\n                    Write-Host \"Ton option n\'est pas bonne, recommence !\"\r\n                }\r\n            }\r\n        }While($option -ne 1)\r\n\r\n        return $tabEtudiant\r\n    }\r\n\r\n    #Méthode qui permet de créer une liste d\'étudiant sans préciser le sexe :\r\n    [System.Collections.ArrayList] static creerListeEtudiantWithoutSexe(){\r\n        #Initialisation du tableau d\'objets :\r\n        $tabEtudiant=[System.Collections.ArrayList]::new()\r\n        [Int]$option=0\r\n\r\n        #Gestion des étudiants :\r\n        Do{\r\n            [Int]$option=Read-Host \"1 : Fin du traitement | 2 - Ajouter un étudiant (sans préciser le sexe) | 3 - Moyenne inférieur à 10 (sans préciser le sexe) | 4 - Moyenne supérieur à 17 (sans préciser le sexe) `n Entrez l\'option\"\r\n            switch ($option){\r\n                1{\r\n                    Write-Host \"Fin du traitement\"\r\n                }\r\n                2{\r\n                    $tabEtudiant+=[Etudiant]::creerEtudiantWithoutSexe()\r\n                }\r\n                3{\r\n                    Foreach($historique in $tabEtudiant){\r\n			            if($historique.moyenne -lt 10){\r\n			                $historique.displayInfoWithoutSexe()\r\n                        }\r\n                    }\r\n                }\r\n                4{\r\n                    Foreach($historique in $tabEtudiant){\r\n			            if($historique.moyenne -gt 17){\r\n			                $historique.displayInfoWithoutSexe()\r\n                        }\r\n                    }\r\n                }\r\n                Default{\r\n                    Write-Host \"Ton option n\'est pas bonne, recommence !\"\r\n                }\r\n            }\r\n        }While($option -ne 1)\r\n\r\n        return $tabEtudiant\r\n    }\r\n\r\n}\r\n\r\n$firstListEtudiant=[Etudiant]::creerListeEtudiant()\r\n$firstListEtudiantWithoutSexe=[Etudiant]::creerListeEtudiantWithoutSexe()\r\n$firstListEtudiant\r\n$firstListEtudiantWithoutSexe</code></pre>\r\n				<p><a href=\"./powershell/gestion_etudiants2.ps1\">gestion_etudiants2.ps1</a></p>\r\n', 3),
(24, 'Trier un tableau comportant des prénoms par ordre alphabétique', '<h1><strong>Trier un tableau comportant des prénoms par ordre alphabétique</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Trie un tableau comportant des prénoms par ordre alphabétique :\r\n\r\n#Nettoyage de l\'invite de commande :\r\nClear-Host\r\n\r\n#Initialisation de l\'option et d\'un tableau par défaut :\r\n$nombre=Read-Host \"Entrez une option\"\r\n$tableau1=\"josselin\",\"hurricate\",\"amsterdam\",\"savane\"\r\n\r\n#Boucle switch :\r\nswitch($nombre){\r\n	\r\n	#Cas 1 : on réalise un tableau de prénom\r\n    1{\r\n        [string[]]$tableau1=@()\r\n        [bool]$choix=$FALSE\r\n        while($choix -ne $TRUE ){\r\n            [string]$prenom=Read-Host \"Entrez votre prénom\"\r\n            if($prenom -eq \"stop\"){\r\n                $choix=$TRUE\r\n                break\r\n            }\r\n            $tableau1+=$prenom\r\n        }\r\n    }\r\n	\r\n	#Cas 2 : on traite le tableau en le triant par ordre alphabétique\r\n    2{\r\n        Write-Host \"Le tableau initial est :\" $tableau1\r\n        for($i=0;$i -lt $tableau1.Length-1;$i++){\r\n            for($j=$i+1;$j -lt $tableau1.Length;$j++){\r\n                if($tableau1[$i] -gt $tableau1[$j]){                \r\n                    $var_int=$tableau1[$i]\r\n                    $tableau1[$i]=$tableau1[$j]\r\n                    $tableau1[$j]=$var_int\r\n                 }\r\n            }\r\n        }\r\n        Write-Host \"Le tableau trié est :\" $tableau1\r\n        $recup=$tableau1 | Where-Object{$_ -like \"S*\"} | \r\n		Sort-Object -descending\r\n        Write-Host \"On récupère les mots commençant par la lettre S et on les tries désalphabétiquement :\" $recup\r\n    }\r\n	\r\n	#Cas par défaut : l\'option saisie n\'est pas valide\r\n    default{\r\n        Write-Host \"L\'option choisie n\'est pas valide\"\r\n    }\r\n\r\n}</code></pre>\r\n				<p><a href=\"./powershell/trie_alpha.ps1\">trie_alpha.ps1</a></p>\r\n', 3),
(25, 'Calcul du prix HT et TTC de commande(s) en fonction du prix du produit et de sa quantité', '<h1><strong>Calcul du prix HT et TTC de commande(s) en fonction du prix du produit et de sa quantité</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<h2>Méthode basique</h2>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Calcul du prix HT et TTC d\'une commande en fonction du prix du produit et de sa quantité :\r\n\r\n#Nettoyage de l\'invite commande :\r\nClear-Host\r\n\r\n#Récupération du prix du produit et de sa quantité :\r\n[Decimal]$prix_Produit=Read-Host \"Quel est le prix de votre produit ?\"\r\n[Int]$nb_Produit=Read-Host \"Quel est le nombre de produit(s) commandé(s) ?\"\r\n\r\n#Fonction qui calcule la taxe de 20% (pour 5 euros 5*0.2=5*2*10^(-1)=10^(1)*10^(-1)=10^(0)=1 d\'où 5+1=6 équivalent à 5*1.2=6) :\r\nFunction taxe([Decimal]$prix_Produit,[Int]$quantite)\r\n{\r\n    $prixHT=($prix_Produit*$quantite)\r\n    $prixTTC=($prix_Produit*$quantite)*1.2\r\n    return $prix_Produit,$quantite,$prixHT,$prixTTC\r\n}\r\n\r\n$produit_Taxe=taxe($prix_Produit)($nb_Produit)\r\n\r\nWrite-Host \"Le produit coûte :\" $produit_Taxe[0] \"euros\"\r\nWrite-Host \"Il a été commandé en :\" $produit_Taxe[1] \"fois\"\r\nWrite-Host \"Le prix HT est donc de :\" $produit_Taxe[2] \"euros\"\r\nWrite-Host \"Le prix TTC est donc de :\" $produit_Taxe[3] \"euros\"</code></pre>\r\n				<p><a href=\"./powershell/taxe_commande.ps1\">taxe_commande.ps1</a></p>\r\n				<h2>Méthode avancée</h2>\r\n				<pre><code class=\"language-powershell\">#Auteur : Josselin Fatah-Roux\r\n#Calcul du prix HT et TTC de commande(s) en fonction du prix du produit et de sa quantité :\r\n\r\n#Nettoyage de l\'invite commande :\r\nClear-Host\r\n\r\n#Fonction qui calcule la taxe de 20% (pour 5 euros 5*0.2=5*2*10^(-1)=10^(1)*10^(-1)=10^(0)=1 d\'où 5+1=6 équivalent à 5*1.2=6) :\r\nFunction taxe([Decimal]$prix_Produit,[Int]$quantite){\r\n    $prixHT=($prix_Produit*$quantite)\r\n    $prixTTC=($prix_Produit*$quantite)*1.2\r\n    return $prix_Produit,$quantite,$prixHT,$prixTTC\r\n}\r\n\r\n#Initialisation des tableaux récupérant les prix HT et TTC :\r\n[System.Collections.ArrayList]$tabHT=@() #[System.Object[]]$tabHT=@()\r\n[System.Collections.ArrayList]$tabTTC=@() #[System.Object[]]$tabTTC=@()\r\n\r\n#Boucle qui permet de générer des commandes :\r\nDo{\r\n    [Int]$option=Read-Host \"0 : Fin du traitement | 1 - Prix HT de la commande | 2 - Prix TTC de la commande `n Entrez l\'option\"\r\n    if($option -eq 1 -or $option -eq 2){\r\n        [Decimal]$prix_Produit=Read-Host \"Quel est le prix de votre produit ?\"\r\n        [Int]$nb_Produit=Read-Host \"Quel est le nombre de produit(s) commandé(s) ?\"\r\n        $produit_Taxe=taxe($prix_Produit)($nb_Produit)\r\n    }\r\n    switch ($option){\r\n        0{\r\n            Write-Host \"Fin du traitement\"\r\n        }\r\n        1{\r\n            Write-Host \"Le prix HT est donc de :\" $produit_Taxe[2] \"euros\"\r\n            Write-Host (\"Le prix HT est donc de : {2} euros\" -f $produit_Taxe)\r\n            $tabHT+=$produit_Taxe[2]       \r\n        }\r\n        2{\r\n            Write-Host \"Le prix TTC est donc de :\" $produit_Taxe[3] \"euros\"\r\n            Write-Host (\"Le prix TTC est donc de : {3} euros\" -f $produit_Taxe)\r\n            $tabTTC+=$produit_Taxe[3]\r\n        }\r\n        Default{\r\n            Write-Host \"Ton option n\'est pas bonne, recommence !\"\r\n        }\r\n    }\r\n}While($option -ne 0)</code></pre>\r\n				<p><a href=\"./powershell/taxe_commandes.ps1\">taxe_commandes.ps1</a></p>\r\n', 3),
(26, 'Compter pour chaque lettre de l\'alphabet le nombre de mots (dans un fichier .txt) qui la comporte', '<h1><strong>Compter pour chaque lettre de l\'alphabet le nombre de mots (dans un fichier .txt) qui la comporte</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-bash\">#!/bin/bash\r\n#Auteur : Josselin Fatah-Roux\r\n#Compte pour chaque lettre de l\'alphabet le nombre de mots - contenus dans un fichier texte - qui la comporte :\r\n\r\n#On récupère le chemin absolu du fichier \"dico.txt\" s\'il existe, sinon on obtient une chaîne de caractère vide :\r\nchemin=$(sudo find /home -name $1)\r\necho \"Le chemin du fichier est : $chemin\"\r\n\r\n#On créer ou efface le contenu du fichier statistiques.txt :\r\necho \'\' > statistiques.txt\r\n\r\n#On vérifie que find renvoie bien un résultat (chaîne de caractère), -z confirme si la chaîne de caractère est vide :\r\nif [ -z \"$chemin\" ]\r\nthen\r\n	#Dans le cas où la chaine de caractère est vide on le précise et on arrête le script :\r\n	echo \"Le fichier n\'existe pas et/ou ne se situe pas dans le répertoire /home\"\r\nelse\r\n	#Création d\'un tableau alphabétique :\r\n	alphabet=(\'A\' \'B\' \'C\' \'D\' \'E\' \'F\' \'G\' \'H\' \'I\' \'J\' \'K\' \'L\' \'M\' \'N\' \'O\' \'P\' \'Q\' \'R\' \'S\' \'T\' \'U\' \'V\' \'W\' \'X\' \'Y\' \'Z\')\r\n	#${alphabet[*]} affiche le tableau alphabet en entier :\r\n	echo \"L\'alphabet est : ${alphabet[*]}\"\r\n	#${#alphabet[*]} affiche le nombre d\'éléments dans le tableau :\r\n	echo \"L\'alphabet contient : ${#alphabet[*]} lettres\"\r\n	#On soustrait 1 à ${#alphabet[*]} car le premier indice d\'un tableau est 0 :\r\n	for i in $(seq 0 $((${#alphabet[*]} - 1)))\r\n	do\r\n		#On calcul le nombre de mots contenant la lettre de l\'alphabet actuellement traitée  dans la boucle :\r\n		compteurs[$i]=$(grep ${alphabet[$i]} $chemin | wc -l)\r\n		#On enregistre les statistiques au fur et à mesure de l\'évolution de la boucle dans un fichier texte :\r\n		echo \"${compteurs[$i]} - ${alphabet[$i]}\" >> statistiques.txt\r\n	done\r\n	echo \"Les statistiques pour chaque lettre sont respectivement :\"\r\n	#On vérifie que le deuxième paramètre --description existe et on le fait jouer s\'il existe :\r\n	if [ $# -ge 2 ] && [ $2 = \'--description\' ]\r\n	then\r\n		#Si le deuxième paramètre existe alors on remplace dans le fichier statistiques.txt pour chaque ligne le caractère - par la chaîne de caractère : mot(s) contenant la lettre :\r\n		sed -i \'s/-/mot(s) contenant la lettre/g\' statistiques.txt\r\n		#Puis on trie numériquement par ordre décroissant les données du fichier statistiques.txt :\r\n		sort -nr statistiques.txt\r\n	else\r\n		#Si le deuxième paramètre n\'existe pas alors on trie uniquement numériquement par ordre décroissant les données du fichier statistiques.txt :\r\n		sort -nr statistiques.txt\r\n	fi\r\nfi\r\n\r\n#On supprime le fichier statistiques.txt :\r\nrm statistiques.txt</code></pre>\r\n				<p>Donner les droits d\'exécution au fichier langstat.sh (fichier disponible en dessous) :</p>\r\n				<pre><code class=\"language-bash\">chmod u+rwx,g+rx-w,o+rx-w langstat.sh\r\nls -l</code></pre>\r\n				<p>Exécuter le fichier langstat.sh :</p>\r\n				<pre><code class=\"language-bash\">./langstat.sh dico.txt --description</code></pre>\r\n				<p><a href=\"./bash/dico.txt\">dico.txt</a></p>\r\n				<p><a href=\"./bash/langstat.sh\">langstat.sh</a></p>\r\n', 4),
(27, 'Installation de LAMP (serveur web) sous Debian 10', '<h1><strong>Installation de LAMP (serveur web) sous Debian 10</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				\r\n				<h2>Super-utilisateur</h2>\r\n				<p class=\"textJustify\">Se connecter en root :</p>\r\n				<pre><code class=\"language-bash\">su</code></pre>\r\n				\r\n				<p class=\"textJustify\">Aller au fichier :</p>\r\n				<pre><code class=\"language-bash\">nano /etc/sudoers</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter en dessous de root l\'utilisateur à ajouter en tant que super-utilisateur :</p>\r\n				<pre><code class=\"language-bash\">utilisateur    ALL=(ALL:ALL) ALL</code></pre>\r\n				\r\n				<p class=\"textJustify\">Se déconnecter de root :</p>\r\n				<pre><code class=\"language-bash\">exit</code></pre>\r\n				\r\n				<h2>Mise à jour dépôts</h2>\r\n				<p class=\"textJustify\">Mise à jour de la liste des fichiers disponibles dans les dépôts APT présents dans le fichier de configuration /etc/apt/sources.list :</p>\r\n				<pre><code class=\"language-bash\">sudo apt update</code></pre>\r\n				\r\n				<h2>Installation des paquets</h2>\r\n				<p class=\"textJustify\">Installation d\'Apache HTTP Server (serveur HTTP), de MariaDB (gestionnaire de base de données) et de PHP (langage de programmation) avec son module pour communiquer avec MySQL :</p>\r\n				<pre><code class=\"language-bash\">sudo apt install apache2 php libapache2-mod-php mariadb-server php-mysql</code></pre>\r\n				\r\n				<p class=\"textJustify\">Installation de modules complémentaires qui peuvent être nécessaires :</p>\r\n				<pre><code class=\"language-bash\">sudo apt install php-curl php-gd php-intl php-json php-mbstring php-xml php-zip</code></pre>\r\n				\r\n				<h2>Apache HTTP Server (serveur HTTP)</h2>\r\n				<p class=\"textJustify\">Installation du pare-feu :</p>\r\n				<pre><code class=\"language-bash\">sudo apt install ufw</code></pre>\r\n				\r\n				<p class=\"textJustify\">Autoriser le trafic sur le port 22 et 80 pour le pare-feu :</p>\r\n				<pre><code class=\"language-bash\">sudo ufw allow ssh\r\nsudo ufw allow 22\r\nsudo ufw allow http\r\nsudo ufw allow 80\r\nsudo ufw allow https\r\nsudo ufw enable\r\nsudo ufw app list\r\nsudo ufw status</code></pre>\r\n				\r\n				<p class=\"textJustify\">Vérification de l\'installation d\'Apache en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création de la page info.php détaillant toutes les spécificités de notre environnement PHP :</p>\r\n				<pre><code class=\"language-bash\">cd /var/www/html\r\nsudo nano info.php</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter dans le fichier précédemment créé le code PHP suivant :</p>\r\n				<pre><code class=\"language-php\">&lt;?php\r\nphpinfo();\r\n?&gt;</code></pre>\r\n\r\n				<p class=\"textJustify\">Visualisation du fichier info.php en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/info.php</code></pre>\r\n				\r\n				<h2>MariaDB (gestionnaire de base de données)</h2>\r\n				<p class=\"textJustify\">L\'authentification par défaut pour l\'utilisateur root de MariaDB est unix_socket au lieu de password :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql -u root -p\r\nshow databases;\r\nexit;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création d\'une base test avec la table membres contenant les champs id et pseudo :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql -u root -p\r\nCREATE DATABASE test CHARACTER SET \'utf8\';\r\nCREATE TABLE test.membres\r\n(\r\n    id INT PRIMARY KEY NOT NULL,\r\n    pseudo VARCHAR(250)\r\n);\r\nINSERT INTO test.membres VALUES (\'1\',\'carmen\');\r\nshow databases;\r\nexit;</code></pre>\r\n				\r\n				<h2>phpMyAdmin</h2>\r\n				<p class=\"textJustify\">Téléchargement de la dernière version stable de phpMyAdmin :</p>\r\n				<pre><code class=\"language-bash\">cd Téléchargements\r\nsudo wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz</code></pre>\r\n				\r\n				<p class=\"textJustify\">#Installation de la dernière version stable de phpMyAdmin :</p>\r\n				<pre><code class=\"language-bash\">sudo mkdir /var/www/html/phpmyadmin\r\nsudo tar xvf phpMyAdmin-latest-all-languages.tar.gz --strip-components=1 -C /var/www/html/phpmyadmin</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création du fichier de configuration :</p>\r\n				<pre><code class=\"language-bash\">sudo cp /var/www/html/phpmyadmin/config.sample.inc.php /var/www/html/phpmyadmin/config.inc.php\r\nsudo nano /var/www/html/phpmyadmin/config.inc.php</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter dans ce fichier de configuration une phrase de passe secrète à la ligne :</p>\r\n				<pre><code class=\"language-bash\">$cfg[\'blowfish_secret\'] = \'my_secret_passphrase\';</code></pre>\r\n				\r\n				<p class=\"textJustify\">Réaliser des permissions :</p>\r\n				<pre><code class=\"language-bash\">sudo chmod 660 /var/www/html/phpmyadmin/config.inc.php\r\nsudo chown -R www-data:www-data /var/www/html/phpmyadmin</code></pre>\r\n				\r\n				<p class=\"textJustify\">L\'authentification de l\'utilisateur root de MariaDB au moyen d\'unix_socket ne permet pas de se connecter avec phpMyAdmin. Il nous faut donc pour cela créer un utilisateur super-administrateur ayant les pleins pouvoirs dans MariaDB :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql -u root -p\r\nCREATE USER \'my_user\'@\'localhost\' IDENTIFIED BY \'my_password\';\r\nGRANT ALL PRIVILEGES ON * . * TO \'my_user\'@\'localhost\';\r\nFLUSH PRIVILEGES;\r\nQUIT;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Redémarrer Apache :</p>\r\n				<pre><code class=\"language-bash\">sudo systemctl restart apache2</code></pre>\r\n				\r\n				<p class=\"textJustify\">Accéder et se connecter à phpMyAdmin en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/phpmyadmin</code></pre>\r\n				\r\n				<h2>PHP (langage de programmation)</h2>\r\n				<p class=\"textJustify\">Création d\'une page PHP qui se connecte à la base de données test :</p>\r\n				<pre><code class=\"language-bash\">cd /var/www/html\r\nsudo nano test.php</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter dans le fichier précédemment créé le code PHP suivant :</p>\r\n				<pre><code class=\"language-php\">&lt;?php\r\n//Connexion à la base de données en PDO :\r\ntry\r\n{\r\n	$bdd = new PDO(\'mysql:host=localhost;dbname=test;charset=utf8\',\r\n	\'user\',\'password\');\r\n}\r\ncatch(Exception $e)\r\n{\r\n	die(\'Erreur : \'.$e->getMessage());\r\n}\r\n\r\n$membres = $bdd->query(\'SELECT * FROM membres\');\r\n?&gt;\r\n\r\n<ul>\r\n	&lt;?php while($membre = $membres->fetch()) { ?&gt;\r\n	<li>&lt;?php echo $membre[\'id\'] ?&gt; : &lt;?php echo $membre[\'pseudo\'] ?&gt;</li>\r\n	&lt;?php } ?&gt;\r\n</ul></code></pre>\r\n				\r\n				<p class=\"textJustify\">Visualisation de la table membres en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/test.php</code></pre>\r\n\r\n				<p><a href=\"./bash/code_lamp3.txt\">code_lamp3.txt</a></p>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 5),
(28, 'Installation de LAMP (serveur web) sous CentOS 8', '<h1><strong>Installation de LAMP (serveur web) sous CentOS 8</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				\r\n				<h2>Mise à jour du système</h2>\r\n				<p class=\"textJustify\">Mise à jour des paquets déjà installés avec le nouveau gestionnaire de packages dnf ou l\'ancien yum :</p>\r\n				<pre><code class=\"language-bash\">sudo dnf update\r\nsudo yum update</code></pre>\r\n				\r\n				<h2>Apache HTTP Server (serveur HTTP)</h2>\r\n				<p class=\"textJustify\">Installation d\'Apache avec le nouveau gestionnaire de packages dnf ou l\'ancien yum :</p>\r\n				<pre><code class=\"language-bash\">sudo dnf install httpd\r\nsudo yum install httpd</code></pre>\r\n				\r\n				<p class=\"textJustify\">Démarrage d\'Apache :</p>\r\n				<pre><code class=\"language-bash\">sudo systemctl start httpd\r\nsudo systemctl enable httpd\r\nsudo systemctl status httpd</code></pre>\r\n				\r\n				<p class=\"textJustify\">Autoriser le trafic sur le port 80 pour le pare-feu :</p>\r\n				<pre><code class=\"language-bash\">sudo firewall-cmd --permanent --add-service=http\r\nsudo firewall-cmd --permanent --add-service=https\r\nsudo firewall-cmd --permanent --list-all\r\nsudo firewall-cmd --reload</code></pre>\r\n				\r\n				<p class=\"textJustify\">Vérification de l\'installation d\'Apache en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost</code></pre>\r\n				\r\n				<h2>MariaDB (gestionnaire de base de données)</h2>\r\n				<p class=\"textJustify\">Installation de MariaDB avec le nouveau gestionnaire de packages dnf ou l\'ancien yum :</p>\r\n				<pre><code class=\"language-bash\">sudo dnf install mariadb-server\r\nsudo yum install mariadb-server</code></pre>\r\n				\r\n				<p class=\"textJustify\">Démarrage de MariaDB :</p>\r\n				<pre><code class=\"language-bash\">sudo systemctl start mariadb\r\nsudo systemctl enable mariadb\r\nsudo systemctl status mariadb</code></pre>\r\n\r\n				<p class=\"textJustify\">Exécution d\'un script qui va sécuriser MariaDB :</p>\r\n				<pre><code class=\"language-php\">sudo mysql_secure_installation</code></pre>\r\n				\r\n				<p class=\"textJustify\">1) Aucun mot de passe n\'a été définit pour l\'utilisateur root de MariaDB (donc ne pas insèrer de mot de passe - laisser vide).\r\n<br>2) Ensuite ne pas définir de mot de passe pour l\'utilisateur root de MariaDB car MariaDB utilise une méthode d\'authentification spéciale pour l\'utilisateur root, qui est généralement plus sûre que l\'utilisation d\'un mot de passe - laisser vide.\r\n<br>3) Valider le reste avec Y cela supprimera les utilisateurs anonymes, la base de données de test et désactivera la connexion root à distance.</p>\r\n				\r\n				<p class=\"textJustify\">L\'authentification par défaut pour l\'utilisateur root de MariaDB est unix_socket au lieu de password :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql\r\nshow databases;\r\nexit;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création d\'une base test avec la table membres contenant les champs id et pseudo :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql\r\nCREATE DATABASE test CHARACTER SET \'utf8\';\r\nCREATE TABLE test.membres\r\n(\r\n    id INT PRIMARY KEY NOT NULL,\r\n    pseudo VARCHAR(250)\r\n);\r\nINSERT INTO test.membres VALUES (\'1\',\'carmen\');\r\nshow databases;\r\nexit;</code></pre>\r\n				\r\n				<h2>PHP (langage de programmation)</h2>\r\n				<p class=\"textJustify\">Installation de PHP (langage de programmation) avec son module pour communiquer avec MariaDB à partir du nouveau gestionnaire de packages dnf ou l\'ancien yum :</p>\r\n				<pre><code class=\"language-bash\">sudo dnf install php php-pdo php-pecl-zip php-json php-mbstring php-mysqlnd\r\nsudo yum install php php-pdo php-pecl-zip php-json php-mbstring php-mysqlnd</code></pre>\r\n				\r\n				<p class=\"textJustify\">Redémarrer Apache :</p>\r\n				<pre><code class=\"language-bash\">sudo systemctl restart httpd</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création de la page info.php détaillant toutes les spécificités de notre environnement PHP :</p>\r\n				<pre><code class=\"language-bash\">cd /var/www/html\r\nsudo nano info.php</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter dans le fichier précédemment créé le code PHP suivant :</p>\r\n				<pre><code class=\"language-php\">&lt;?php\r\nphpinfo();\r\n?&gt;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Visualisation du fichier info.php en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/info.php</code></pre>\r\n				\r\n				<h2>phpMyAdmin</h2>\r\n				<p class=\"textJustify\">Installation de phpMyAdmin :</p>\r\n				<pre><code class=\"language-bash\">sudo wget https://files.phpmyadmin.net/phpMyAdmin/5.0.1/phpMyAdmin-5.0.1-all-languages.zip\r\nsudo unzip phpMyAdmin-5.0.1-all-languages.zip\r\nsudo mv phpMyAdmin-5.0.1-all-languages /usr/share/phpmyadmin</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création d\'un répertoire tmp :</p>\r\n				<pre><code class=\"language-bash\">sudo mkdir /usr/share/phpmyadmin/tmp\r\nsudo chown -R apache:apache /usr/share/phpmyadmin\r\nsudo chmod 777 /usr/share/phpmyadmin/tmp</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter phpMyAdmin à Apache grâce au fichier phpmyadmin.conf :</p>\r\n				<pre><code class=\"language-bash\">sudo nano /etc/httpd/conf.d/phpmyadmin.conf</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter au fichier phpmyadmin.conf :</p>\r\n				<pre><code class=\"language-bash\">Alias /phpmyadmin /usr/share/phpmyadmin\r\n \r\n&lt;Directory /usr/share/phpmyadmin/&gt;\r\n   AddDefaultCharset UTF-8\r\n   &lt;IfModule mod_authz_core.c&gt;\r\n     # Apache 2.4\r\n     &lt;RequireAny&gt;\r\n      Require all granted\r\n     &lt;/RequireAny&gt;\r\n   &lt;/IfModule&gt;\r\n&lt;/Directory&gt;\r\n \r\n&lt;Directory /usr/share/phpmyadmin/setup/&gt;\r\n   &lt;IfModule mod_authz_core.c&gt;\r\n # Apache 2.4\r\n     &lt;RequireAny&gt;\r\n       Require all granted\r\n     &lt;/RequireAny&gt;\r\n   &lt;/IfModule&gt;\r\n&lt;/Directory&gt;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Redémarrer Apache :</p>\r\n				<pre><code class=\"language-bash\">sudo systemctl restart httpd</code></pre>\r\n				\r\n				<p class=\"textJustify\">L\'authentification de l\'utilisateur root de MariaDB au moyen d\'unix_socket ne permet pas de se connecter avec phpMyAdmin. Il nous faut donc pour cela créer un utilisateur super-administrateur ayant les pleins pouvoirs dans MariaDB :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql\r\nCREATE USER \'my_user\'@\'localhost\' IDENTIFIED BY \'my_password\';\r\nGRANT ALL PRIVILEGES ON * . * TO \'my_user\'@\'localhost\';\r\nFLUSH PRIVILEGES;\r\nQUIT;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Accéder et se connecter à phpMyAdmin en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/phpmyadmin</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création d\'une page PHP qui se connecte à la base de données test :</p>\r\n				<pre><code class=\"language-bash\">cd /var/www/html\r\nsudo nano test.php</code></pre>\r\n\r\n				<p class=\"textJustify\">Ajouter dans le fichier précédemment créé le code PHP suivant :</p>\r\n				<pre><code class=\"language-php\">&lt;?php\r\n//Connexion à la base de données en PDO :\r\ntry\r\n{\r\n	$bdd = new PDO(\'mysql:host=localhost;dbname=test;charset=utf8\',\r\n	\'user\',\'password\');\r\n}\r\ncatch(Exception $e)\r\n{\r\n	die(\'Erreur : \'.$e->getMessage());\r\n}\r\n\r\n$membres = $bdd->query(\'SELECT * FROM membres\');\r\n?&gt;\r\n\r\n\r\n	&lt;?php while($membre = $membres->fetch()) { ?&gt;\r\n	&lt;?php echo $membre[\'id\'] ?&gt; : &lt;?php echo $membre[\'pseudo\'] ?&gt;\r\n	&lt;?php } ?&gt;</code></pre>\r\n\r\n				<p class=\"textJustify\">Visualisation de la table membres en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/test.php</code></pre>\r\n\r\n				<p><a href=\"./bash/code_lamp2.txt\">code_lamp2.txt</a></p>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 6),
(29, 'Installation de LAMP (serveur web) sous Ubuntu 20.04', '<h1><strong>Installation de LAMP (serveur web) sous Ubuntu 20.04</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				\r\n				<h2>Mise à jour dépôts</h2>\r\n				<p class=\"textJustify\">Mise à jour de la liste des fichiers disponibles dans les dépôts APT présents dans le fichier de configuration /etc/apt/sources.list :</p>\r\n				<pre><code class=\"language-bash\">sudo apt update</code></pre>\r\n				\r\n				<h2>Installation des paquets</h2>\r\n				<p class=\"textJustify\">Installation d\'Apache HTTP Server (serveur HTTP), de MySQL ou bien de MariaDB (gestionnaire de base de données) et de PHP (langage de programmation) avec son module pour communiquer avec MySQL :</p>\r\n				<pre><code class=\"language-bash\">sudo apt install apache2 php libapache2-mod-php mysql-server php-mysql\r\nsudo apt install apache2 php libapache2-mod-php mariadb-server php-mysql</code></pre>\r\n				\r\n				<p class=\"textJustify\">Installation de modules complémentaires qui peuvent être nécessaires :</p>\r\n				<pre><code class=\"language-bash\">sudo apt install php-curl php-gd php-intl php-json php-mbstring php-xml php-zip</code></pre>\r\n				\r\n				<h2>Apache HTTP Server (serveur HTTP)</h2>\r\n				<p class=\"textJustify\">Autoriser le trafic sur le port 80 pour le pare-feu :</p>\r\n				<pre><code class=\"language-bash\">sudo ufw app list\r\nsudo ufw allow in \"Apache\"\r\nsudo ufw status</code></pre>\r\n				\r\n				<p class=\"textJustify\">Vérification de l\'installation d\'Apache en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création de la page info.php détaillant toutes les spécificités de notre environnement PHP :</p>\r\n				<pre><code class=\"language-bash\">cd /var/www/html\r\nsudo nano info.php</code></pre>\r\n\r\n				<p class=\"textJustify\">Ajouter dans le fichier précédemment créé le code PHP suivant :</p>\r\n				<pre><code class=\"language-php\">&lt;?php\r\nphpinfo();\r\n?&gt;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Visualisation du fichier info.php en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/info.php</code></pre>\r\n				\r\n				<h2>MySQL (gestionnaire de base de données)</h2>\r\n				<p class=\"textJustify\">Avec MySQL depuis Bionic 18.04, et MariaDB depuis Xenial 16.04, l\'authentification de l\'utilisateur root de MySQL se fait au moyen du plugin auth_socket, donc avec sudo (root du système et non root de MySQL) :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql -u root -p\r\nshow databases;\r\nexit;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Création d\'une base test avec la table membres contenant les champs id et pseudo :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql -u root -p\r\nCREATE DATABASE test CHARACTER SET \'utf8\';\r\nCREATE TABLE test.membres\r\n(\r\n    id INT PRIMARY KEY NOT NULL,\r\n    pseudo VARCHAR(250)\r\n);\r\nINSERT INTO test.membres VALUES (\'1\',\'carmen\');\r\nshow databases;\r\nexit;</code></pre>\r\n				\r\n				<h2>phpMyAdmin</h2>\r\n				<p class=\"textJustify\">Installation de phpMyAdmin en sélectionnant apache2 :</p>\r\n				<pre><code class=\"language-bash\">sudo apt-get install phpmyadmin</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter phpMyAdmin à Apache grâce au fichier apache2.conf :</p>\r\n				<pre><code class=\"language-bash\">sudo nano /etc/apache2/apache2.conf</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter à la fin du fichier apache2.conf :</p>\r\n				<pre><code class=\"language-bash\"># Include phpMyAdmin\r\nInclude /etc/phpmyadmin/apache.conf</code></pre>\r\n				\r\n				<p class=\"textJustify\">Redémarrer Apache :</p>\r\n				<pre><code class=\"language-bash\">sudo service apache2 restart\r\nsudo service apache2 status</code></pre>\r\n				\r\n				<p class=\"textJustify\">L\'authentification de l\'utilisateur root de MySQL au moyen du plugin auth_socket ne permet pas de se connecter avec phpMyAdmin. Il nous faut donc pour cela créer un utilisateur super-administrateur ayant les pleins pouvoirs dans MySQL :</p>\r\n				<pre><code class=\"language-bash\">sudo mysql -u root -p\r\nCREATE USER \'my_user\'@\'localhost\' IDENTIFIED BY \'my_password\';\r\nGRANT ALL PRIVILEGES ON * . * TO \'my_user\'@\'localhost\';\r\nFLUSH PRIVILEGES;\r\nQUIT;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Accéder et se connecter à phpMyAdmin en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/phpmyadmin</code></pre>\r\n				\r\n				<h2>PHP (langage de programmation)</h2>\r\n				<p class=\"textJustify\">Création d\'une page PHP qui se connecte à la base de données test :</p>\r\n				<pre><code class=\"language-bash\">cd /var/www/html\r\nsudo nano test.php</code></pre>\r\n				\r\n				<p class=\"textJustify\">Ajouter dans le fichier précédemment créé le code PHP suivant :</p>\r\n				<pre><code class=\"language-php\">&lt;?php\r\n//Connexion à la base de données en PDO :\r\ntry\r\n{\r\n	$bdd = new PDO(\'mysql:host=localhost;dbname=test;charset=utf8\',\r\n	\'user\',\'password\');\r\n}\r\ncatch(Exception $e)\r\n{\r\n	die(\'Erreur : \'.$e->getMessage());\r\n}\r\n\r\n$membres = $bdd->query(\'SELECT * FROM membres\');\r\n?&gt;\r\n\r\n<ul>\r\n	&lt;?php while($membre = $membres->fetch()) { ?&gt;\r\n	<li>&lt;?php echo $membre[\'id\'] ?&gt; : &lt;?php echo $membre[\'pseudo\'] ?&gt;</li>\r\n	&lt;?php } ?&gt;\r\n</ul></code></pre>\r\n				\r\n				<p class=\"textJustify\">Visualisation de la table membres en rentrant dans la barre d\'adresse du navigateur :</p>\r\n				<pre><code class=\"language-bash\">localhost/test.php</code></pre>\r\n				\r\n				<p class=\"textJustify\">Prioriser les fichiers PHP au fichier HTML grâce au fichier dir.conf</p>\r\n				<pre><code class=\"language-bash\">sudo nano /etc/apache2/mods-enabled/dir.conf</code></pre>\r\n				\r\n				<p class=\"textJustify\">Placer dans le fichier précédent index.php en première position :</p>\r\n				<pre><code class=\"language-bash\">&lt;IfModule mod_dir.c&gt;\r\n	DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm\r\n&lt;/IfModule&gt;</code></pre>\r\n				\r\n				<p class=\"textJustify\">Autoriser Apache à montrer les erreurs grâce au fichier php.ini :</p>\r\n				<pre><code class=\"language-bash\">sudo nano /etc/php/7.4/apache2/php.ini</code></pre>\r\n				\r\n				<p class=\"textJustify\">Dans le fichier précédent retirer les points-virgules et vérifier que :</p>\r\n				<pre><code class=\"language-bash\">error_reporting = E_ALL\r\ndisplay_errors = On</code></pre>\r\n\r\n				<p><a href=\"./bash/code_lamp.txt\">code_lamp.txt</a></p>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>\r\n', 7),
(30, 'Forme canonique d\'une fonction polynôme de degré 2', '<br><img class=\"textCenter\" src=\"latex/dem_poly2.png\" alt=\"Image\" title=\"Ovnie - Forme canonique d\'une fonction polynôme de degré 2\" />\r\n				<p><a href=\"./latex/dem_canonique_0.pdf\">dem_canonique_white.pdf</a></p>\r\n				<p><a href=\"./latex/dem_canonique_1.pdf\">dem_canonique_black.pdf</a></p>\r\n', 8),
(31, 'Zorglangue : système d\'écriture et langage inventé par Zorglub (personnage de Spirou et Fantasio)', '<h1><strong>Zorglangue : système d\'écriture et langage inventé par Zorglub (personnage de Spirou et Fantasio)</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				<pre><code class=\"language-python\">#Auteur : Josselin Fatah-Roux\r\n#Fonctions qui permettent une traduction en langage Zorglangue et inversement :\r\n\r\n#Définition de la fonction fragmenter :\r\ndef fragmenter(phrase):\r\n\r\n    #Récupération de la phrase dans une autre variable :\r\n    recup_Phrase=phrase\r\n\r\n    #Calcul la longueur de la chaîne :\r\n    longueur_Chaine=len(recup_Phrase)\r\n\r\n    #Initialisation des variables :\r\n    i=0\r\n    construction_Mot=\"\"\r\n    construction_Liste=[]\r\n    \r\n    #Itération pour étude de chaque caractère :\r\n    for i in range(longueur_Chaine):\r\n        caractere=recup_Phrase[i]\r\n        \r\n        #Si le caractère est dans l\'aphabet, on concatène pour former le mot :\r\n        if caractere in alphabet_Minuscule or caractere in alphabet_Majuscule:\r\n            construction_Mot+=caractere\r\n            #Si c\'est le dernier caractère, on ajoute le mot à la liste :\r\n            if i==(longueur_Chaine-1):\r\n                construction_Liste.append(construction_Mot)\r\n                \r\n        #Sinon dans le cas de la découverte d\'un caractère spéciale :\r\n        else:\r\n            #Si c\'est le premier caractère, on l\'ajoute dans la liste :\r\n            if i==0:\r\n                construction_Liste.append(caractere)\r\n            #Sinon\r\n            else:\r\n                #Si le caractère précédent est spéciale, on ajoute juste le caractère :\r\n                if recup_Phrase[i-1] not in alphabet_Minuscule and recup_Phrase[i-1] not in alphabet_Majuscule:\r\n                    construction_Liste.append(caractere)\r\n                #Dans le cas contraire, on ajoute le mot à la liste puis le caractère spéciale :\r\n                else:\r\n                    construction_Liste.append(construction_Mot)\r\n                    construction_Liste.append(caractere)\r\n                    construction_Mot=\"\"\r\n                    \r\n    return(construction_Liste)\r\n\r\n#Définition de la fonction inverser :\r\ndef inverser(mot):\r\n\r\n    #Calcul la longueur du mot :\r\n    longueur_Mot=len(mot)\r\n\r\n    #Initialisation des variables :\r\n    j=0\r\n    concatenation_Inverse=\"\"\r\n\r\n    #Itération pour inverser mot :\r\n    for j in range(longueur_Mot):\r\n        concatenation_Inverse+=mot[longueur_Mot-1-j]\r\n\r\n    #Déplacement de la majuscule si elle est présente :\r\n    if concatenation_Inverse[longueur_Mot-1].isupper():\r\n        recup_Lettre=\"\"\r\n        recup_Lettre=concatenation_Inverse[0]\r\n        recup_Concatenation_Inverse_Lower=concatenation_Inverse[1:]\r\n        concatenation_Inverse=recup_Lettre.upper()+recup_Concatenation_Inverse_Lower.lower()\r\n    \r\n    return(concatenation_Inverse)\r\n\r\n#Définition de la fonction traduire :\r\ndef traduire(phrase):\r\n\r\n    #On fragmente la phrase avec la fonction fragmenter :\r\n    recup_Liste=fragmenter(phrase)\r\n    print(\"---------Fragmenter---------\")\r\n    print(recup_Liste)\r\n\r\n    #Longueur de la liste précedemment créée :\r\n    longueur_Liste=len(recup_Liste)\r\n\r\n    #Initialisation des variables :\r\n    k=0\r\n    nouvelle_Liste=[]\r\n    nouvelle_Chaine=\"\"\r\n\r\n    #Inversion des mots dans la liste :\r\n    for k in range(longueur_Liste):\r\n        nouvelle_Liste.append(inverser(recup_Liste[k]))\r\n        nouvelle_Chaine+=inverser(recup_Liste[k])\r\n\r\n    print(\"---------Inversion---------\")\r\n    print(nouvelle_Liste)\r\n    \r\n    return(nouvelle_Chaine)\r\n\r\n#Définition de l\'aphalbet :\r\nalphabet_Minuscule=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\r\nalphabet_Majuscule=[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]\r\n\r\n#Exécution interactive :\r\nquitter=\"\"\r\nwhile quitter!=\"Q\" :\r\n\r\n    #Récupération de la phrase :\r\n    phrase=input(\"Entrez un texte à traduire : \")\r\n\r\n    #On vérifie que la phrase est une chaine de caractère :\r\n    if type(phrase)==str:\r\n        recup_Nouvelle_Chaine=traduire(phrase)\r\n        print(\"---------Traduction---------\")\r\n        print(recup_Nouvelle_Chaine)\r\n\r\n        #Doit-on traduire le résultat ?\r\n        continuer=input(\"Voulez-vous traduire le résultat Y/n : \")\r\n\r\n        #On traite la réponse :\r\n        if continuer==\"Y\":\r\n            recup_Nouvelle_Nouvelle_Chaine=traduire(recup_Nouvelle_Chaine)\r\n            print(\"---------Traduction---------\")\r\n            print(recup_Nouvelle_Nouvelle_Chaine)\r\n\r\n        #Doit-on continuer ?\r\n        quitter=input(\"Entrez Q pour quitter ou Entrée pour continuer : \")\r\n\r\n    else:\r\n        print(\"Merci de retaper la phrase\")</code></pre>\r\n				<p><a href=\"./python/zorglangue.py\">zorglangue.py</a></p>\r\n', 2);
INSERT INTO `articles` (`id`, `titre`, `corps`, `liaison`) VALUES
(32, 'Installation de Control-M (ordonnanceur) sous CentOS 7', '<h1><strong>Installation de Control-M (ordonnanceur) sous CentOS 7</strong></h1>\r\n				<script src=\"prism.js\"></script>\r\n				\r\n				<h2>Configuration des VM :</h2>\r\n				<p class=\"textCenter\">\r\n					<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/wTnxRSInlKM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n				</p>\r\n				\r\n				<p class=\"textJustify\">Configuration de la VM pour Control-M EM :</p>\r\n					<ul>\r\n						<li>OS : CentOS 7</li>\r\n						<li>Espace : 65 Go (disque 1 : 20Go, disque 2 : 30Go, disque 3 : 10 Go, disque 4 : 5 Go)</li>\r\n						<li>RAM : 9000 Mo</li>\r\n						<li>Processeur : 2 CPU</li>\r\n						<li>Presse-papier partagé : Bidirectionnel</li>\r\n						<li>Glisser-Déposer : Bidirectionnel</li>\r\n						<li>Mode d\'accès réseau : Accès par pont</li>\r\n						<li>Dossiers partagés : Activé (choisir son dossier avec les packages pour l\'installation Control-M)</li>\r\n					</ul>\r\n				<p class=\"textJustify\">Installation de l\'OS :</p>\r\n					<ul>\r\n						<li>Mettre le clavier à la bonne langue</li>\r\n						<li>Choisir le bon fuseau horaire</li>\r\n						<li>Choisir le bon espace de stockage (disque 1)</li>\r\n						<li>Activer la carte réseau</li>\r\n						<li>Créer un utilisateur admin autre que root (jfatahEM dans mon cas)</li>\r\n					</ul>\r\n				<p class=\"textJustify\">Mises à jour de l\'OS et installation des Guest Additions for VirtualBox :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nyum -y update\r\nyum -y install epel-release\r\nyum -y install make gcc kernel-headers kernel-devel perl dkms bzip2\r\nexit\r\nreboot\r\n\r\n#Insérer l\'image CD des Additions Invités et le lancer</code></pre>\r\n				<p class=\"textJustify\">Installation de GNOME pour l\'installation de Control-M en GUI :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\ndnf -y groupinstall workstation\r\nsystemctl set-default graphical.target\r\nexit\r\nreboot</code></pre>\r\n\r\n				<p class=\"textJustify\">Configuration de la VM pour Control-M Server :</p>\r\n					<ul>\r\n						<li>OS : CentOS 7</li>\r\n						<li>Espace : 65 Go (disque 1 : 20Go, disque 2 : 30Go, disque 3 : 10 Go, disque 4 : 5 Go)</li>\r\n						<li>RAM : 4000 Mo</li>\r\n						<li>Processeur : 1 CPU</li>\r\n						<li>Presse-papier partagé : Bidirectionnel</li>\r\n						<li>Glisser-Déposer : Bidirectionnel</li>\r\n						<li>Mode d\'accès réseau : Accès par pont</li>\r\n						<li>Dossiers partagés : Activé (choisir son dossier avec les packages pour l\'installation Control-M)</li>\r\n					</ul>\r\n				<p class=\"textJustify\">Installation de l\'OS :</p>\r\n					<ul>\r\n						<li>Mettre le clavier à la bonne langue</li>\r\n						<li>Choisir le bon fuseau horaire</li>\r\n						<li>Choisir le bon espace de stockage (disque 1)</li>\r\n						<li>Activer la carte réseau</li>\r\n						<li>Créer un utilisateur admin autre que root (jfatahS dans mon cas)</li>\r\n					</ul>\r\n				<p class=\"textJustify\">Mises à jour de l\'OS et installation des Guest Additions for VirtualBox :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nyum -y update\r\nyum -y install epel-release\r\nyum -y install make gcc kernel-headers kernel-devel perl dkms bzip2\r\nexit\r\nreboot\r\n\r\n#Insérer l\'image CD des Additions Invités et le lancer</code></pre>\r\n				<p class=\"textJustify\">Installation de GNOME pour l\'installation de Control-M en GUI :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\ndnf -y groupinstall workstation\r\nsystemctl set-default graphical.target\r\nexit\r\nreboot</code></pre>\r\n\r\n				<h2>Création des filesystems et users</h2>\r\n				<p class=\"textCenter\">\r\n					<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2WFNFZ82rtM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n				</p>\r\n				\r\n				<p class=\"textJustify\">Création du filesystem /soft/em via la gestion par volumes logiques :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nyum -y install lvm2\r\n\r\nfdisk -l\r\nlsblk -f\r\n\r\npvcreate /dev/sdb\r\npvcreate /dev/sdc\r\npvcreate /dev/sdd\r\npvdisplay\r\n\r\nvgcreate datavg /dev/sdb /dev/sdc\r\nvgextend datavg /dev/sdd\r\nvgdisplay\r\n\r\nlvcreate -n lvsoft -L 40G datavg\r\nlvcreate -n lvagent -L 4G datavg\r\nlvdisplay\r\nmkfs.ext4 /dev/datavg/lvsoft\r\nmkfs.ext4 /dev/datavg/lvagent\r\n\r\nmkdir -p /soft/em\r\nmkdir /aglinux\r\nmount /dev/datavg/lvsoft /soft/em\r\nmount /dev/datavg/lvagent /aglinux\r\nlsblk -f\r\n\r\nvi /etc/fstab\r\n--------------\r\nUUID=2e4b7451-3d81-4244-a301-18adaf9ed62a /soft/em                   ext4     defaults        0 0\r\nUUID=ff537b21-d319-4f35-83da-a9cd378c42ab /aglinux                   ext4     defaults        0 0\r\n--------------\r\n\r\ndf -h\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Création d\'un utilisateur Control-M ctmem et paramétrage :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nyum -y install csh\r\n\r\n/usr/sbin/useradd -u 1001 -d /soft/em -s /bin/csh ctmem\r\npasswd ctmem\r\nusermod -aG wheel ctmem\r\ngroups ctmem\r\n\r\ncat /etc/passwd\r\n--------------\r\nctmem:x:1001:1001::/soft/em:/bin/csh\r\n--------------\r\n\r\ncd /soft\r\nchown ctmem:ctmem em\r\n\r\nvi /etc/sysctl.conf\r\n--------------\r\nkernel.shmall = 2097152\r\nkernel.shmmax = 2147483648\r\nkernel.shmmni = 800\r\nkernel.sem = 250 32000 100 128\r\nfs.file-max = 65536\r\nnet.ipv4.ip_local_port_range = 32768 61000\r\n--------------\r\n\r\n/sbin/sysctl -p\r\ndnf -y install libnsl\r\n\r\nulimit -Ha\r\n\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Création du filesystem /soft/controlm via la gestion par volumes logiques :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nyum -y install lvm2\r\n\r\nfdisk -l\r\nlsblk -f\r\n\r\npvcreate /dev/sdb\r\npvcreate /dev/sdc\r\npvcreate /dev/sdd\r\npvdisplay\r\n\r\nvgcreate datavg /dev/sdb /dev/sdc\r\nvgextend datavg /dev/sdd\r\nvgdisplay\r\n\r\nlvcreate -n lvsoft -L 40G datavg\r\nlvcreate -n lvdoc -L 1G datavg\r\nlvdisplay\r\nmkfs.ext4 /dev/datavg/lvsoft\r\nmkfs.ext4 /dev/datavg/lvdoc\r\n\r\nmkdir -p /soft/controlm\r\nmkdir /documentation\r\nmount /dev/datavg/lvsoft /soft/controlm\r\nmount /dev/datavg/lvdoc /documentation\r\nlsblk -f\r\n\r\nvi /etc/fstab\r\n--------------\r\nUUID=4b4b74ab-04d1-494f-8843-a6e33e0fd03f /soft/controlm                   ext4     defaults        0 0\r\nUUID=3c61878d-dcac-4f7a-a6e8-c31e05876e3f /documentation                   ext4     defaults        0 0\r\n--------------\r\n\r\ndf -h\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Création d\'un utilisateur Control-M controlm et paramétrage :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nyum -y install csh\r\n\r\n/usr/sbin/useradd -u 1001 -d /soft/controlm -s /bin/csh controlm\r\npasswd controlm\r\nusermod -aG wheel controlm\r\ngroups controlm\r\n\r\ncat /etc/passwd\r\n--------------\r\ncontrolm:x:1001:1001::/soft/controlm:/bin/csh\r\n--------------\r\n\r\ncd /soft\r\nchown controlm:controlm controlm\r\n\r\nvi /etc/sysctl.conf\r\n--------------\r\nkernel.shmall = 2097152\r\nkernel.shmmax = 2147483648\r\nkernel.shmmni = 800\r\nkernel.sem = 250 32000 100 128\r\nfs.file-max = 65536\r\nnet.ipv4.ip_local_port_range = 32768 61000\r\n--------------\r\n\r\n/sbin/sysctl -p\r\ndnf -y install libnsl\r\n\r\nulimit -Ha\r\n\r\nexit</code></pre>\r\n				<h2>Installation des composants</h2>\r\n				<p class=\"textCenter\">\r\n					<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9cv9K8mcVSE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n				</p>\r\n				<p class=\"textJustify\">Récupération du package dans le dossier partagé vers la VM :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\ncd /media/sf_[Nom_du_dossier_partagé]\r\ncp DROST.9.0.20.000_Linux-x86_64.tar.Z /soft/em/DROST.9.0.20.000_Linux-x86_64.tar.Z\r\nmkdir -p /soft/em/upgrade_ctmem/\r\ncp DROST.9.0.20.200_Linux-x86_64.z /soft/em/upgrade_ctmem/DROST.9.0.20.200_Linux-x86_64.z\r\ncd /soft/em\r\nchmod a+x DROST.9.0.20.000_Linux-x86_64.tar.Z\r\nchown ctmem:ctmem DROST.9.0.20.000_Linux-x86_64.tar.Z\r\ncd /soft/em/upgrade_ctmem/\r\nchmod a+x DROST.9.0.20.200_Linux-x86_64.z\r\nchown ctmem:ctmem DROST.9.0.20.200_Linux-x86_64.z\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Sauvegarde de la VM avant installation de Control-M Enterprise Manager :</p>\r\n					<ul>\r\n						<li>Eteindre la VM</li>\r\n						<li>Faire un snapshot</li>\r\n					</ul>\r\n				<p class=\"textJustify\">Récupération du tar.Z dans le dossier partagé vers la VM :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\ncd /media/sf_[Nom_du_dossier_partagé]\r\ncp DROST.9.0.20.000_Linux-x86_64.tar.Z /soft/controlm/DROST.9.0.20.000_Linux-x86_64.tar.Z\r\nmkdir -p /soft/em/upgrade_ctms/\r\ncp DROST.9.0.20.200_Linux-x86_64.z /soft/controlm/upgrade_ctms/DROST.9.0.20.200_Linux-x86_64.z\r\ncd /soft/controlm\r\nchmod a+x DROST.9.0.20.000_Linux-x86_64.tar.Z\r\nchown controlm:controlm DROST.9.0.20.000_Linux-x86_64.tar.Z\r\ncd /soft/em/upgrade_ctms/\r\nchmod a+x DROST.9.0.20.200_Linux-x86_64.z\r\nchown controlm:controlm DROST.9.0.20.200_Linux-x86_64.z\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Sauvegarde de la VM avant installation de Control-M Server :</p>\r\n					<ul>\r\n						<li>Eteindre la VM</li>\r\n						<li>Faire un snapshot</li>\r\n					</ul>				\r\n				<p class=\"textJustify\">Lancement de l\'installation de Control-M Enterprise Manager :</p>\r\n				<pre><code class=\"language-bash\">su - ctmem\r\ncd /soft/em\r\nuncompress/gunzip DROST.9.0.20.000_Linux-x86_64.tar.Z\r\ntar -xvf DROST.9.0.20.000_Linux-x86_64.tar\r\n./setup.sh\r\nexit</code></pre>			\r\n				<p class=\"textJustify\">Lancement de l\'upgrade de Control-M Enterprise Manager :</p>\r\n				<pre><code class=\"language-bash\">su - ctmem\r\ncd /soft/em/upgrade_ctmem/\r\nuncompress/gunzip DROST.9.0.20.200_Linux-x86_64.z\r\ntar -xvf DROST.9.0.20.200_Linux-x86_64.z\r\ncd /soft/em/\r\n/soft/em/upgrade_ctmem/setup.sh\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Récupération de l\'ip de la VM :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nip addr\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Vérification de l\'installation du Control-M Enterprise Manager :</p>\r\n				<pre><code class=\"language-bash\">su - ctmem\r\nroot_menu\r\n1\r\n1\r\nq\r\n\r\nps -aux | grep ctm\r\nps -aux | grep controlm\r\nexit\r\n\r\n#Dans la barre d\'adresse du navigateur : http://localhost.localdomain:18080/</code></pre>\r\n				<p class=\"textJustify\">Ouvrir les ports 18080 et 13075 sur Control-M Entreprise Manager :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nsudo firewall-cmd --zone=public --permanent --add-port=18080/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=13075/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=8446/tcp\r\nsudo firewall-cmd --reload\r\nnetstat -na | grep 18080\r\nnetstat -na | grep 13075\r\nnetstat -na | grep 8446\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Installation du client Control-M sur Windows :</p>\r\n					<ul>\r\n						<li>Installation framework à une version minimale 4.5.2</li>\r\n						<li>Installer le client Control-M sur Windows avec le fichier DROST.9.0.20.000_windows en lançant le setup</li>\r\n						<li>Hostname : ip de la machine</li>\r\n						<li>Port : 18080</li>\r\n						<li>Créer une nouvelle règle sortante dans la pare-feu Windows pour autoriser le flux sur les port 18080 et 13075</li>\r\n						<li>L\'utilisateur est emuser et le mot de passe celui définit lors de l\'installation</li>\r\n						<li>telnet ip port dans le cmd pour vérifier la bonne communication</li>\r\n					</ul>\r\n					\r\n				<p class=\"textJustify\">Lancement de l\'installation de Control-M Server :</p>\r\n				<pre><code class=\"language-bash\">su - controlm\r\ncd /soft/controlm\r\nuncompress/gunzip DROST.9.0.20.000_Linux-x86_64.tar.Z\r\ntar -xvf DROST.9.0.20.000_Linux-x86_64.tar\r\n./setup.sh\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Lancement de l\'upgrade de Control-M Server :</p>\r\n				<pre><code class=\"language-bash\">su - controlm\r\ncd /soft/controlm/ugrade_ctms/\r\nuncompress/gunzip DROST.9.0.20.200_Linux-x86_64.z\r\ntar -xvf DROST.9.0.20.000_Linux-x86_64.tar\r\ncd /soft/controlm/\r\n/soft/em/upgrade_ctms/setup.sh\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Récupération de l\'ip de la VM :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nip addr\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Vérification de l\'installation du Control-M Server :</p>\r\n				<pre><code class=\"language-bash\">su - controlm\r\nctm_menu\r\n1\r\n1\r\nq\r\nq\r\n\r\nps -aux | grep ctm\r\nps -aux | grep controlm\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Ouvrir les ports 2368, 2369, 2370, 2371, 7005 et 7006 sur Control-M Entreprise Manager/Server :</p>\r\n				<pre><code class=\"language-bash\">su - root\r\nsudo firewall-cmd --zone=public --permanent --add-port=2368/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=2369/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=2370/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=2371/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=7005/tcp\r\nsudo firewall-cmd --zone=public --permanent --add-port=7006/tcp\r\nsudo firewall-cmd --reload\r\nnetstat -na | grep 2368\r\nnetstat -na | grep 2369\r\nnetstat -na | grep 2370\r\nnetstat -na | grep 2371\r\nnetstat -na | grep 7005\r\nnetstat -na | grep 7006\r\nexit</code></pre>\r\n				<p class=\"textJustify\">Ajout du Control-M Server depuis le CCM :</p>\r\n				<ul>\r\n					<li>Allez sur le CCM grâce au client Control-M puis cliquer sur New et ajouter Control-M Server.</li>\r\n				</ul>\r\n				<p class=\"textJustify\">Activer l\'agent Control-M Server sur le Control-M Server :</p>\r\n				<pre><code class=\"language-bash\">yum -y install psmisc	\r\nyum -y install net-tools\r\n\r\nsu - controlm\r\nag_diag_comm\r\nexit\r\n\r\nsu - root\r\ncd /soft/controlm/ctm_agent/ctm/scripts\r\n./start-ag\r\nexit</code></pre>\r\n				<p><a href=\"./videos/ALL_INSTALL_CTLM.txt\">ALL_INSTALL_CTLM.txt</a></p>\r\n				<p class=\"textRight\">Auteur : Josselin Fatah-Roux</p>', 6);

-- --------------------------------------------------------

--
-- Structure de la table `categories`
--

DROP TABLE IF EXISTS `categories`;
CREATE TABLE IF NOT EXISTS `categories` (
  `id` int NOT NULL AUTO_INCREMENT,
  `titre` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `categories`
--

INSERT INTO `categories` (`id`, `titre`) VALUES
(1, 'Jeux'),
(2, 'Internet'),
(3, 'Scripting'),
(4, 'Unix/Linux'),
(5, 'Scientifiques');

-- --------------------------------------------------------

--
-- Structure de la table `commentaires`
--

DROP TABLE IF EXISTS `commentaires`;
CREATE TABLE IF NOT EXISTS `commentaires` (
  `id` int NOT NULL AUTO_INCREMENT,
  `pseudo` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `num_redac` int NOT NULL,
  `date_commentaire` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `commentaires`
--

INSERT INTO `commentaires` (`id`, `pseudo`, `message`, `num_redac`, `date_commentaire`) VALUES
(1, 'ovnie', 'Test de la fonctionnalité des commentaires sur un premier article.', 1, '2022-03-12 05:29:42'),
(2, 'ovnie', 'Test de la fonctionnalité des commentaires sur un deuxième article.', 2, '2022-03-12 05:30:56');

-- --------------------------------------------------------

--
-- Structure de la table `membres`
--

DROP TABLE IF EXISTS `membres`;
CREATE TABLE IF NOT EXISTS `membres` (
  `id` int NOT NULL AUTO_INCREMENT,
  `pseudo` varchar(255) NOT NULL,
  `mail` varchar(255) NOT NULL,
  `motdepasse` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `membres`
--

INSERT INTO `membres` (`id`, `pseudo`, `mail`, `motdepasse`) VALUES
(1, 'ovnie', 'vufic@outlook.com', '62e9b87011fe6c1ae4c4732f411dab65');

-- --------------------------------------------------------

--
-- Structure de la table `minichat`
--

DROP TABLE IF EXISTS `minichat`;
CREATE TABLE IF NOT EXISTS `minichat` (
  `id` int NOT NULL AUTO_INCREMENT,
  `pseudo` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `date_minichat` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `minichat`
--

INSERT INTO `minichat` (`id`, `pseudo`, `message`, `date_minichat`) VALUES
(1, 'ovnie', 'Bonjour tout le monde. Ceci est un test !', '2021-10-26 18:02:40');

-- --------------------------------------------------------

--
-- Structure de la table `souscategories`
--

DROP TABLE IF EXISTS `souscategories`;
CREATE TABLE IF NOT EXISTS `souscategories` (
  `id` int NOT NULL AUTO_INCREMENT,
  `titre` varchar(255) NOT NULL,
  `parent` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;

--
-- Déchargement des données de la table `souscategories`
--

INSERT INTO `souscategories` (`id`, `titre`, `parent`) VALUES
(1, 'Vidéos d\'internet', 2),
(2, 'Python', 3),
(3, 'PowerShell', 3),
(4, 'Bash', 3),
(5, 'Debian', 4),
(6, 'CentOS', 4),
(7, 'Ubuntu', 4),
(8, 'Démonstrations', 5);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
